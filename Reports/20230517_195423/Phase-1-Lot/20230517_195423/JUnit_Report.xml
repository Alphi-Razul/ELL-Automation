<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Phase-1-Lot" time="579.997" tests="6" failures="0" errors="0">
   <testsuite name="Phase-1-Lot" tests="6" failures="0" errors="0" time="579.997" skipped="0" timestamp="2023-05-17 19:54:31" hostname="Alphi-MohamedRazul - Alphi-MohamedRazul" id="Test Suites/Phase-1-Lot">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423"/>
         <property name="logFiles" value="C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\execution0.log"/>
         <property name="attachments" value="C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333580113.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333580823.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333663310.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333664164.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333665005.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333665863.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333848553.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333876306.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333900395.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333921115.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333939828.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333949479.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333950493.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333953377.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333954756.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333967549.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333993592.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333994364.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333997685.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334012621.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334040152.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334042030.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334043592.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334045469.png, C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334051244.png"/>
         <property name="hostName" value="Alphi-MohamedRazul - Alphi-MohamedRazul"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="8.6.0.208"/>
         <property name="browser" value="Chrome 113.0.0.0"/>
         <property name="hostAddress" value="192.168.8.120"/>
         <property name="sessionId" value="a3e2e60239d4d114564c4b2f80b1e509"/>
         <property name="seleniumVersion" value="3.141.59"/>
         <property name="proxyInformation" value="ProxyInformation { proxyOption=NO_PROXY, proxyServerType=HTTP, username=, password=********, proxyServerAddress=, proxyServerPort=0, executionList=&quot;&quot;, isApplyToDesiredCapabilities=true }"/>
         <property name="platform" value="Windows 10"/>
      </properties>
      <testcase name="Test Cases/Login_Select Database" time="25.746" classname="Test Cases/Login_Select Database" status="PASSED">
         <system-out><![CDATA[2023-05-17 19:54:32 - [TEST_CASE][PASSED] - Test Cases/Login_Select Database: Test Cases/Login_Select Database

2023-05-17 19:54:33 - [TEST_STEP][PASSED] - openBrowser("https://test.lablogs.co/#/login"): Browser is opened with url: 'https://test.lablogs.co/#/login'

2023-05-17 19:54:34 - [MESSAGE][INFO] - Starting 'Chrome' driver

2023-05-17 19:54:34 - [MESSAGE][INFO] - Action delay is set to 0 milliseconds

2023-05-17 19:54:43 - [MESSAGE][PASSED] - Browser is opened with url: 'https://test.lablogs.co/#/login'

2023-05-17 19:54:43 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized

2023-05-17 19:54:43 - [MESSAGE][PASSED] - Current window maximized

2023-05-17 19:54:43 - [TEST_STEP][PASSED] - setText(findTestObject("Login_SelectDatabase/input_Sign in to your account_ng-untouched _b61fc2"), findTestData("Login").getValue("UserName", 1)): Text 'admin@lablogs.co' is set on object 'Object Repository/Login_SelectDatabase/input_Sign in to your account_ng-untouched _b61fc2'

2023-05-17 19:54:45 - [MESSAGE][PASSED] - Text 'admin@lablogs.co' is set on object 'Object Repository/Login_SelectDatabase/input_Sign in to your account_ng-untouched _b61fc2'

2023-05-17 19:54:45 - [TEST_STEP][PASSED] - setEncryptedText(findTestObject("Login_SelectDatabase/input_Email_ng-touched ng-dirty ng-valid"), findTestData("Login").getValue("Password", 1)): Text ****** has been set on object 'Object Repository/Login_SelectDatabase/input_Email_ng-touched ng-dirty ng-valid'

2023-05-17 19:54:46 - [MESSAGE][PASSED] - Text ****** has been set on object 'Object Repository/Login_SelectDatabase/input_Email_ng-touched ng-dirty ng-valid'

2023-05-17 19:54:46 - [TEST_STEP][PASSED] - click(findTestObject("Login_SelectDatabase/button_SIGN IN")): Object: 'Object Repository/Login_SelectDatabase/button_SIGN IN' is clicked on

2023-05-17 19:54:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Login_SelectDatabase/button_SIGN IN' is clicked on

2023-05-17 19:54:47 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2023-05-17 19:54:52 - [MESSAGE][PASSED] - Delayed 5 second(s)

2023-05-17 19:54:52 - [TEST_STEP][PASSED] - d = getWebDriver(): null

2023-05-17 19:54:52 - [TEST_STEP][PASSED] - b = d.findElements(By.xpath("//p[@class='card-text mb-0']")): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - r = b.size(): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - println(r): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - for ([i = 0, i < b.size(), (i++)]): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - x1 = b.get(i): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - out.println(x1.getText()): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - x1 = b.get(i): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - out.println(x1.getText()): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - x1 = b.get(i): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - out.println(x1.getText()): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - x1 = b.get(i): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - out.println(x1.getText()): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - x1 = b.get(i): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - out.println(x1.getText()): null

2023-05-17 19:54:54 - [TEST_STEP][PASSED] - fis = new java.io.FileInputStream(C://ELL//Automation//Excel//DataBase Selection.xlsx): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - k = 1: null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - wb = new org.apache.poi.xssf.usermodel.XSSFWorkbook(fis): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - s = wb.getSheet("Select Database"): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - for ([i = 0, i < b.size(), (i++)]): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - x1 = b.get(i): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - createCell(0).setCellValue(x1.getText()): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - (k++): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - x1 = b.get(i): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - createCell(0).setCellValue(x1.getText()): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - (k++): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - x1 = b.get(i): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - createCell(0).setCellValue(x1.getText()): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - (k++): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - x1 = b.get(i): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - createCell(0).setCellValue(x1.getText()): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - (k++): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - x1 = b.get(i): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - createCell(0).setCellValue(x1.getText()): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - (k++): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - fos = new java.io.FileOutputStream(C://ELL//Automation//Excel//DataBase Selection.xlsx): null

2023-05-17 19:54:55 - [TEST_STEP][PASSED] - wb.write(fos): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - P1 = findTestData("Select_Database").getValue("Database", 1): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - out.println(P1): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - for ([i = 0, i < b.size(), (i++)]): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - y1 = b.get(i): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - z1 = y1.getText(): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - out.println(z1): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - if (z1.equals(P1)): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - y1 = b.get(i): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - z1 = y1.getText(): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - out.println(z1): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - if (z1.equals(P1)): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - y1 = b.get(i): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - z1 = y1.getText(): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - out.println(z1): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - if (z1.equals(P1)): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - y1 = b.get(i): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - z1 = y1.getText(): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - out.println(z1): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - if (z1.equals(P1)): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - y1 = b.get(i): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - z1 = y1.getText(): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - out.println(z1): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - if (z1.equals(P1)): null

2023-05-17 19:54:56 - [TEST_STEP][PASSED] - y1.click(): null

2023-05-17 19:54:57 - [TEST_STEP][PASSED] - break: null

2023-05-17 19:54:57 - [TEST_STEP][PASSED] - out.print("good"): null

2023-05-17 19:54:57 - [TEST_STEP][PASSED] - click(findTestObject("Login_SelectDatabase/button_Use Selected Database")): Object: 'Object Repository/Login_SelectDatabase/button_Use Selected Database' is clicked on

2023-05-17 19:54:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Login_SelectDatabase/button_Use Selected Database' is clicked on]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Site creation - Suite" time="83.153" classname="Test Cases/Site creation - Suite" status="PASSED">
         <system-out><![CDATA[2023-05-17 19:54:57 - [TEST_CASE][PASSED] - Test Cases/Site creation - Suite: Test Cases/Site creation - Suite

2023-05-17 19:55:00 - [TEST_STEP][PASSED] - delay(5): Delayed 5 second(s)

2023-05-17 19:55:05 - [MESSAGE][PASSED] - Delayed 5 second(s)

2023-05-17 19:55:05 - [TEST_STEP][PASSED] - click(findTestObject("ELL Menu/Select_MenuIcon")): Object: 'Object Repository/ELL Menu/Select_MenuIcon' is clicked on

2023-05-17 19:55:17 - [MESSAGE][PASSED] - Object: 'Object Repository/ELL Menu/Select_MenuIcon' is clicked on

2023-05-17 19:55:17 - [TEST_STEP][PASSED] - click(findTestObject("ELL Menu/a_ADMINISTRATION")): Object: 'Object Repository/ELL Menu/a_ADMINISTRATION' is clicked on

2023-05-17 19:55:18 - [MESSAGE][PASSED] - Object: 'Object Repository/ELL Menu/a_ADMINISTRATION' is clicked on

2023-05-17 19:55:18 - [TEST_STEP][PASSED] - click(findTestObject("Site creation/button_Add Site")): Object: 'Object Repository/Site creation/button_Add Site' is clicked on

2023-05-17 19:55:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Site creation/button_Add Site' is clicked on

2023-05-17 19:55:21 - [TEST_STEP][PASSED] - click(findTestObject("Site creation/input_Site Name")): Object: 'Object Repository/Site creation/input_Site Name' is clicked on

2023-05-17 19:55:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Site creation/input_Site Name' is clicked on

2023-05-17 19:55:21 - [TEST_STEP][PASSED] - dateFormat = new java.text.SimpleDateFormat(yyyy/dd/MM HH:mm:ss): null

2023-05-17 19:55:21 - [TEST_STEP][PASSED] - date = new java.util.Date(): null

2023-05-17 19:55:21 - [TEST_STEP][PASSED] - a = dateFormat.format(date): null

2023-05-17 19:55:21 - [TEST_STEP][PASSED] - println(a): null

2023-05-17 19:55:21 - [TEST_STEP][PASSED] - b = " - ": null

2023-05-17 19:55:21 - [TEST_STEP][PASSED] - Site = findTestData("Site Data").getValue("Site Name", 1) + b + a: null

2023-05-17 19:55:21 - [TEST_STEP][PASSED] - println(Site): null

2023-05-17 19:55:21 - [TEST_STEP][PASSED] - logInfo(Site): Madurai - 2023/17/05 19:55:21

2023-05-17 19:55:21 - [MESSAGE][INFO] - Madurai - 2023/17/05 19:55:21

2023-05-17 19:55:21 - [TEST_STEP][PASSED] - Excel.writeData("ELL_Departments & Units", "Add D&U", 1, 1, Site): null

2023-05-17 19:55:22 - [TEST_STEP][PASSED] - setText(findTestObject("Site creation/input_Site Name"), Site): Text 'Madurai - 2023/17/05 19:55:21' is set on object 'Object Repository/Site creation/input_Site Name'

2023-05-17 19:55:22 - [MESSAGE][PASSED] - Text 'Madurai - 2023/17/05 19:55:21' is set on object 'Object Repository/Site creation/input_Site Name'

2023-05-17 19:55:22 - [TEST_STEP][PASSED] - s1 = getAttribute(findTestObject("Site creation/input_Site Name"), "value"): Attribute 'value' of object 'Object Repository/Site creation/input_Site Name' is: 'Madurai - 2023/17/05 19:55:21'

2023-05-17 19:55:23 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Site creation/input_Site Name' is: 'Madurai - 2023/17/05 19:55:21'

2023-05-17 19:55:23 - [TEST_STEP][PASSED] - println(s1): null

2023-05-17 19:55:23 - [TEST_STEP][PASSED] - verifyEqual(Site, s1): Actual object 'Madurai - 2023/17/05 19:55:21' and expected object 'Madurai - 2023/17/05 19:55:21' are equal

2023-05-17 19:55:23 - [MESSAGE][PASSED] - Actual object 'Madurai - 2023/17/05 19:55:21' and expected object 'Madurai - 2023/17/05 19:55:21' are equal

2023-05-17 19:55:23 - [TEST_STEP][PASSED] - A1 = findTestData("Site Data").getValue("Address", 1): null

2023-05-17 19:55:23 - [TEST_STEP][PASSED] - setText(findTestObject("Site creation/input_Address"), A1): Text '221 Hudson Street' is set on object 'Object Repository/Site creation/input_Address'

2023-05-17 19:55:24 - [MESSAGE][PASSED] - Text '221 Hudson Street' is set on object 'Object Repository/Site creation/input_Address'

2023-05-17 19:55:24 - [TEST_STEP][PASSED] - A2 = getAttribute(findTestObject("Site creation/input_Address"), "value"): Attribute 'value' of object 'Object Repository/Site creation/input_Address' is: '221 Hudson Street'

2023-05-17 19:55:24 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Site creation/input_Address' is: '221 Hudson Street'

2023-05-17 19:55:24 - [TEST_STEP][PASSED] - println(A2): null

2023-05-17 19:55:24 - [TEST_STEP][PASSED] - verifyEqual(A1, A2): Actual object '221 Hudson Street' and expected object '221 Hudson Street' are equal

2023-05-17 19:55:24 - [MESSAGE][PASSED] - Actual object '221 Hudson Street' and expected object '221 Hudson Street' are equal

2023-05-17 19:55:24 - [TEST_STEP][PASSED] - c1 = findTestData("Site Data").getValue("City", 1): null

2023-05-17 19:55:24 - [TEST_STEP][PASSED] - setText(findTestObject("Site creation/input_City_city"), c1): Text 'NY' is set on object 'Object Repository/Site creation/input_City_city'

2023-05-17 19:55:25 - [MESSAGE][PASSED] - Text 'NY' is set on object 'Object Repository/Site creation/input_City_city'

2023-05-17 19:55:25 - [TEST_STEP][PASSED] - c2 = getAttribute(findTestObject("Site creation/input_City_city"), "value"): Attribute 'value' of object 'Object Repository/Site creation/input_City_city' is: 'NY'

2023-05-17 19:55:26 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Site creation/input_City_city' is: 'NY'

2023-05-17 19:55:26 - [TEST_STEP][PASSED] - verifyEqual(c1, c2): Actual object 'NY' and expected object 'NY' are equal

2023-05-17 19:55:26 - [MESSAGE][PASSED] - Actual object 'NY' and expected object 'NY' are equal

2023-05-17 19:55:26 - [TEST_STEP][PASSED] - S5 = findTestData("Site Data").getValue("State", 1): null

2023-05-17 19:55:26 - [TEST_STEP][PASSED] - setText(findTestObject("Site creation/input_State_state"), S5): Text 'Rochester' is set on object 'Object Repository/Site creation/input_State_state'

2023-05-17 19:55:27 - [MESSAGE][PASSED] - Text 'Rochester' is set on object 'Object Repository/Site creation/input_State_state'

2023-05-17 19:55:27 - [TEST_STEP][PASSED] - S6 = getAttribute(findTestObject("Site creation/input_State_state"), "value"): Attribute 'value' of object 'Object Repository/Site creation/input_State_state' is: 'Rochester'

2023-05-17 19:55:27 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Site creation/input_State_state' is: 'Rochester'

2023-05-17 19:55:27 - [TEST_STEP][PASSED] - verifyEqual(S5, S6): Actual object 'Rochester' and expected object 'Rochester' are equal

2023-05-17 19:55:27 - [MESSAGE][PASSED] - Actual object 'Rochester' and expected object 'Rochester' are equal

2023-05-17 19:55:27 - [TEST_STEP][PASSED] - z1 = findTestData("Site Data").getValue("Zip", 1): null

2023-05-17 19:55:27 - [TEST_STEP][PASSED] - setText(findTestObject("Site creation/input_Zip_zip"), z1): Text '14609' is set on object 'Object Repository/Site creation/input_Zip_zip'

2023-05-17 19:55:28 - [MESSAGE][PASSED] - Text '14609' is set on object 'Object Repository/Site creation/input_Zip_zip'

2023-05-17 19:55:28 - [TEST_STEP][PASSED] - z2 = getAttribute(findTestObject("Site creation/input_Zip_zip"), "value"): Attribute 'value' of object 'Object Repository/Site creation/input_Zip_zip' is: '14609'

2023-05-17 19:55:28 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Site creation/input_Zip_zip' is: '14609'

2023-05-17 19:55:28 - [TEST_STEP][PASSED] - verifyEqual(z1, z2): Actual object '14609' and expected object '14609' are equal

2023-05-17 19:55:28 - [MESSAGE][PASSED] - Actual object '14609' and expected object '14609' are equal

2023-05-17 19:55:28 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Site creation/select_country"), findTestData("Site Data").getValue("Country", 1), true): All options with label 'United States' are selected in object 'Object Repository/Site creation/select_country'  using regular expression

2023-05-17 19:55:36 - [MESSAGE][PASSED] - All options with label 'United States' are selected in object 'Object Repository/Site creation/select_country'  using regular expression

2023-05-17 19:55:36 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Site creation/select_country"), findTestData("Site Data").getValue("Country", 1), false, 0): 1 option(s) with label 'United States' is/are present in object 'Object Repository/Site creation/select_country' 

2023-05-17 19:55:36 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:55:40 - [MESSAGE][PASSED] - 1 option(s) with label 'United States' is/are present in object 'Object Repository/Site creation/select_country' 

2023-05-17 19:55:40 - [TEST_STEP][PASSED] - setText(findTestObject("Site creation/input_Phone_phone"), findTestData("Site Data").getValue("Phone", 1)): Text '1234567890' is set on object 'Object Repository/Site creation/input_Phone_phone'

2023-05-17 19:55:41 - [MESSAGE][PASSED] - Text '1234567890' is set on object 'Object Repository/Site creation/input_Phone_phone'

2023-05-17 19:55:41 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Site creation/select_Timezone"), findTestData("Site Data").getValue("Timezone", 1), true): All options with label 'EST' are selected in object 'Object Repository/Site creation/select_Timezone'  using regular expression

2023-05-17 19:55:58 - [MESSAGE][PASSED] - All options with label 'EST' are selected in object 'Object Repository/Site creation/select_Timezone'  using regular expression

2023-05-17 19:55:58 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Site creation/select_Timezone"), findTestData("Site Data").getValue("Timezone", 1), false, 0): 1 option(s) with label 'EST' is/are present in object 'Object Repository/Site creation/select_Timezone' 

2023-05-17 19:55:58 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:56:05 - [MESSAGE][PASSED] - 1 option(s) with label 'EST' is/are present in object 'Object Repository/Site creation/select_Timezone' 

2023-05-17 19:56:05 - [TEST_STEP][PASSED] - click(findTestObject("Site creation/input_system_Schedule")): Object: 'Object Repository/Site creation/input_system_Schedule' is clicked on

2023-05-17 19:56:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Site creation/input_system_Schedule' is clicked on

2023-05-17 19:56:06 - [TEST_STEP][PASSED] - click(findTestObject("Site creation/SA_ON")): Object: 'Object Repository/Site creation/SA_ON' is clicked on

2023-05-17 19:56:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Site creation/SA_ON' is clicked on

2023-05-17 19:56:06 - [TEST_STEP][PASSED] - click(findTestObject("Site creation/SU_ON")): Object: 'Object Repository/Site creation/SU_ON' is clicked on

2023-05-17 19:56:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Site creation/SU_ON' is clicked on

2023-05-17 19:56:07 - [TEST_STEP][PASSED] - click(findTestObject("Site creation/button_Save")): Object: 'Object Repository/Site creation/button_Save' is clicked on

2023-05-17 19:56:07 - [MESSAGE][PASSED] - Object: 'Object Repository/Site creation/button_Save' is clicked on

2023-05-17 19:56:07 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Site creation/div_Success  Site added successfully"), 0): Object 'Object Repository/Site creation/div_Success  Site added successfully' is present

2023-05-17 19:56:07 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:56:10 - [MESSAGE][PASSED] - Object 'Object Repository/Site creation/div_Success  Site added successfully' is present

2023-05-17 19:56:10 - [TEST_STEP][PASSED] - c = getText(findTestObject("Site creation/div_Success  Site added successfully")): Text of object 'Object Repository/Site creation/div_Success  Site added successfully' is: 'Success!
Site added successfully.'

2023-05-17 19:56:10 - [MESSAGE][PASSED] - Text of object 'Object Repository/Site creation/div_Success  Site added successfully' is: 'Success!
Site added successfully.'

2023-05-17 19:56:10 - [TEST_STEP][PASSED] - println(c): null

2023-05-17 19:56:10 - [TEST_STEP][PASSED] - logInfo(c): Success!
Site added successfully.

2023-05-17 19:56:10 - [MESSAGE][INFO] - Success!
Site added successfully.

2023-05-17 19:56:10 - [TEST_STEP][PASSED] - click(findTestObject("Site creation/div_click")): Object: 'Object Repository/Site creation/div_click' is clicked on

2023-05-17 19:56:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Site creation/div_click' is clicked on

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - executor = driver: null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - li = driver.findElements(By.xpath("//div[@class=" + "'col']")): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - op = li.size(): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - println(op): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - for ([i = 0, i < li.size(), (i++)]): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:11 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:12 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:13 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:14 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:15 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:16 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:17 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - println(x3): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - if (Site.equals(x3)): null

2023-05-17 19:56:18 - [TEST_STEP][PASSED] - x2.click(): null

2023-05-17 19:56:19 - [TEST_STEP][PASSED] - executor.executeScript("arguments[0].scrollIntoView(true)", x2): null

2023-05-17 19:56:19 - [TEST_STEP][PASSED] - break: null

2023-05-17 19:56:19 - [TEST_STEP][PASSED] - ScrollIntoCreatedSite.screenshot(): Taking screenshot successfully

2023-05-17 19:56:20 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333580113.png]]

2023-05-17 19:56:21 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333580823.png]]]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Dept-Units creation - Suite" time="85.035" classname="Test Cases/Dept-Units creation - Suite" status="PASSED">
         <system-out><![CDATA[2023-05-17 19:56:21 - [TEST_CASE][PASSED] - Test Cases/Dept-Units creation - Suite: Test Cases/Dept-Units creation - Suite

2023-05-17 19:56:23 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2023-05-17 19:56:23 - [TEST_STEP][PASSED] - actions = sendKeys(HOME).perform(): null

2023-05-17 19:56:23 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/Departments - Units")): Object: 'Object Repository/Dept-User creation/Departments - Units' is clicked on

2023-05-17 19:56:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/Departments - Units' is clicked on

2023-05-17 19:56:24 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/button_Add Department")): Object: 'Object Repository/Dept-User creation/button_Add Department' is clicked on

2023-05-17 19:56:26 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/button_Add Department' is clicked on

2023-05-17 19:56:26 - [TEST_STEP][PASSED] - dateFormat = new java.text.SimpleDateFormat(yyyy/dd/MM HH:mm:ss): null

2023-05-17 19:56:26 - [TEST_STEP][PASSED] - date = new java.util.Date(): null

2023-05-17 19:56:26 - [TEST_STEP][PASSED] - a = dateFormat.format(date): null

2023-05-17 19:56:26 - [TEST_STEP][PASSED] - println(a): null

2023-05-17 19:56:26 - [TEST_STEP][PASSED] - b = " - ": null

2023-05-17 19:56:26 - [TEST_STEP][PASSED] - D = findTestData("Dept_Unit Data").getValue("Department Name", 1) + b + a: null

2023-05-17 19:56:27 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_Department Name"), D): Text 'Sample - 2023/17/05 19:56:26' is set on object 'Object Repository/Dept-User creation/input_Department Name'

2023-05-17 19:56:28 - [MESSAGE][PASSED] - Text 'Sample - 2023/17/05 19:56:26' is set on object 'Object Repository/Dept-User creation/input_Department Name'

2023-05-17 19:56:28 - [TEST_STEP][PASSED] - println(D): null

2023-05-17 19:56:28 - [TEST_STEP][PASSED] - logInfo(D): Sample - 2023/17/05 19:56:26

2023-05-17 19:56:28 - [MESSAGE][INFO] - Sample - 2023/17/05 19:56:26

2023-05-17 19:56:28 - [TEST_STEP][PASSED] - Excel.writeData("ELL_Departments & Units", "Add D&U", 1, 2, D): null

2023-05-17 19:56:28 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Dept-User creation/input_Site"), findTestData("Dept_Unit Data").getValue("Site", 1), true): All options with label 'Madurai - 2023/17/05 19:55:21' are selected in object 'Object Repository/Dept-User creation/input_Site'  using regular expression

2023-05-17 19:56:36 - [MESSAGE][PASSED] - All options with label 'Madurai - 2023/17/05 19:55:21' are selected in object 'Object Repository/Dept-User creation/input_Site'  using regular expression

2023-05-17 19:56:36 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Dept-User creation/input_Site"), findTestData("Dept_Unit Data").getValue("Site", 1), false, 2): 1 option(s) with label 'Madurai - 2023/17/05 19:55:21' is/are present in object 'Object Repository/Dept-User creation/input_Site' 

2023-05-17 19:56:40 - [MESSAGE][PASSED] - 1 option(s) with label 'Madurai - 2023/17/05 19:55:21' is/are present in object 'Object Repository/Dept-User creation/input_Site' 

2023-05-17 19:56:40 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_Bench Unit Name"), findTestData("Dept_Unit Data").getValue("Bench / Unit Name", 1)): Text 'Test01' is set on object 'Object Repository/Dept-User creation/input_Bench Unit Name'

2023-05-17 19:56:41 - [MESSAGE][PASSED] - Text 'Test01' is set on object 'Object Repository/Dept-User creation/input_Bench Unit Name'

2023-05-17 19:56:41 - [TEST_STEP][PASSED] - D1 = getAttribute(findTestObject("Dept-User creation/input_Bench Unit Name"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_Bench Unit Name' is: 'Test01'

2023-05-17 19:56:41 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_Bench Unit Name' is: 'Test01'

2023-05-17 19:56:41 - [TEST_STEP][PASSED] - println(D1): null

2023-05-17 19:56:41 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("Bench / Unit Name", 1), D1): Actual object 'Test01' and expected object 'Test01' are equal

2023-05-17 19:56:41 - [MESSAGE][PASSED] - Actual object 'Test01' and expected object 'Test01' are equal

2023-05-17 19:56:41 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_CLIA"), findTestData("Dept_Unit Data").getValue("CLIA License Number", 1)): Text '67890' is set on object 'Object Repository/Dept-User creation/input_CLIA'

2023-05-17 19:56:42 - [MESSAGE][PASSED] - Text '67890' is set on object 'Object Repository/Dept-User creation/input_CLIA'

2023-05-17 19:56:42 - [TEST_STEP][PASSED] - D2 = getAttribute(findTestObject("Dept-User creation/input_CLIA"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_CLIA' is: '67890'

2023-05-17 19:56:43 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_CLIA' is: '67890'

2023-05-17 19:56:43 - [TEST_STEP][PASSED] - println(D2): null

2023-05-17 19:56:43 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("CLIA License Number", 1), D2): Actual object '67890' and expected object '67890' are equal

2023-05-17 19:56:43 - [MESSAGE][PASSED] - Actual object '67890' and expected object '67890' are equal

2023-05-17 19:56:43 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_Joint Commission"), findTestData("Dept_Unit Data").getValue("Joint Commission", 1)): Text 'Commission' is set on object 'Object Repository/Dept-User creation/input_Joint Commission'

2023-05-17 19:56:44 - [MESSAGE][PASSED] - Text 'Commission' is set on object 'Object Repository/Dept-User creation/input_Joint Commission'

2023-05-17 19:56:44 - [TEST_STEP][PASSED] - D3 = getAttribute(findTestObject("Dept-User creation/input_Joint Commission"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_Joint Commission' is: 'Commission'

2023-05-17 19:56:45 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_Joint Commission' is: 'Commission'

2023-05-17 19:56:45 - [TEST_STEP][PASSED] - println(D3): null

2023-05-17 19:56:45 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("Joint Commission", 1), D3): Actual object 'Commission' and expected object 'Commission' are equal

2023-05-17 19:56:45 - [MESSAGE][PASSED] - Actual object 'Commission' and expected object 'Commission' are equal

2023-05-17 19:56:45 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_CAP"), findTestData("Dept_Unit Data").getValue("CAP", 1)): Text 'Pac' is set on object 'Object Repository/Dept-User creation/input_CAP'

2023-05-17 19:56:47 - [MESSAGE][PASSED] - Text 'Pac' is set on object 'Object Repository/Dept-User creation/input_CAP'

2023-05-17 19:56:47 - [TEST_STEP][PASSED] - D4 = getAttribute(findTestObject("Dept-User creation/input_CAP"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_CAP' is: 'Pac'

2023-05-17 19:56:47 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_CAP' is: 'Pac'

2023-05-17 19:56:47 - [TEST_STEP][PASSED] - println(D4): null

2023-05-17 19:56:47 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("CAP", 1), D4): Actual object 'Pac' and expected object 'Pac' are equal

2023-05-17 19:56:47 - [MESSAGE][PASSED] - Actual object 'Pac' and expected object 'Pac' are equal

2023-05-17 19:56:47 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_COLA"), findTestData("Dept_Unit Data").getValue("COLA", 1)): Text 'Cola' is set on object 'Object Repository/Dept-User creation/input_COLA'

2023-05-17 19:56:48 - [MESSAGE][PASSED] - Text 'Cola' is set on object 'Object Repository/Dept-User creation/input_COLA'

2023-05-17 19:56:48 - [TEST_STEP][PASSED] - D5 = getAttribute(findTestObject("Dept-User creation/input_COLA"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_COLA' is: 'Cola'

2023-05-17 19:56:49 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_COLA' is: 'Cola'

2023-05-17 19:56:49 - [TEST_STEP][PASSED] - println(D5): null

2023-05-17 19:56:49 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("COLA", 1), D5): Actual object 'Cola' and expected object 'Cola' are equal

2023-05-17 19:56:49 - [MESSAGE][PASSED] - Actual object 'Cola' and expected object 'Cola' are equal

2023-05-17 19:56:49 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_AABB"), findTestData("Dept_Unit Data").getValue("AABB", 1)): Text 'AABB' is set on object 'Object Repository/Dept-User creation/input_AABB'

2023-05-17 19:56:50 - [MESSAGE][PASSED] - Text 'AABB' is set on object 'Object Repository/Dept-User creation/input_AABB'

2023-05-17 19:56:50 - [TEST_STEP][PASSED] - D6 = getAttribute(findTestObject("Dept-User creation/input_AABB"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_AABB' is: 'AABB'

2023-05-17 19:56:50 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_AABB' is: 'AABB'

2023-05-17 19:56:50 - [TEST_STEP][PASSED] - println(D6): null

2023-05-17 19:56:50 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("AABB", 1), D6): Actual object 'AABB' and expected object 'AABB' are equal

2023-05-17 19:56:51 - [MESSAGE][PASSED] - Actual object 'AABB' and expected object 'AABB' are equal

2023-05-17 19:56:51 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_AALA"), "AALA"): Text 'AALA' is set on object 'Object Repository/Dept-User creation/input_AALA'

2023-05-17 19:56:52 - [MESSAGE][PASSED] - Text 'AALA' is set on object 'Object Repository/Dept-User creation/input_AALA'

2023-05-17 19:56:52 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_AOAHFAP"), "AOAHFAP"): Text 'AOAHFAP' is set on object 'Object Repository/Dept-User creation/input_AOAHFAP'

2023-05-17 19:56:53 - [MESSAGE][PASSED] - Text 'AOAHFAP' is set on object 'Object Repository/Dept-User creation/input_AOAHFAP'

2023-05-17 19:56:53 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_ASHI"), "ASHI"): Text 'ASHI' is set on object 'Object Repository/Dept-User creation/input_ASHI'

2023-05-17 19:56:54 - [MESSAGE][PASSED] - Text 'ASHI' is set on object 'Object Repository/Dept-User creation/input_ASHI'

2023-05-17 19:56:54 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_NYDOH"), "NYDOH"): Text 'NYDOH' is set on object 'Object Repository/Dept-User creation/input_NYDOH'

2023-05-17 19:56:55 - [MESSAGE][PASSED] - Text 'NYDOH' is set on object 'Object Repository/Dept-User creation/input_NYDOH'

2023-05-17 19:56:55 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_CADOH"), "CADOH"): Text 'CADOH' is set on object 'Object Repository/Dept-User creation/input_CADOH'

2023-05-17 19:56:56 - [MESSAGE][PASSED] - Text 'CADOH' is set on object 'Object Repository/Dept-User creation/input_CADOH'

2023-05-17 19:56:56 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_FLDOH"), "FLDOH"): Text 'FLDOH' is set on object 'Object Repository/Dept-User creation/input_FLDOH'

2023-05-17 19:56:57 - [MESSAGE][PASSED] - Text 'FLDOH' is set on object 'Object Repository/Dept-User creation/input_FLDOH'

2023-05-17 19:56:57 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_NYSPFI"), "NYSPFI"): Text 'NYSPFI' is set on object 'Object Repository/Dept-User creation/input_NYSPFI'

2023-05-17 19:56:58 - [MESSAGE][PASSED] - Text 'NYSPFI' is set on object 'Object Repository/Dept-User creation/input_NYSPFI'

2023-05-17 19:56:58 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_AU-ID"), "AU-ID"): Text 'AU-ID' is set on object 'Object Repository/Dept-User creation/input_AU-ID'

2023-05-17 19:56:58 - [MESSAGE][PASSED] - Text 'AU-ID' is set on object 'Object Repository/Dept-User creation/input_AU-ID'

2023-05-17 19:56:58 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/button_Add Bench  Unit")): Object: 'Object Repository/Dept-User creation/button_Add Bench  Unit' is clicked on

2023-05-17 19:56:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/button_Add Bench  Unit' is clicked on

2023-05-17 19:56:59 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_BenchUnit_1"), findTestData("Dept_Unit Data").getValue("Bench / Unit Name", 2)): Text 'Test02' is set on object 'Object Repository/Dept-User creation/input_BenchUnit_1'

2023-05-17 19:57:00 - [MESSAGE][PASSED] - Text 'Test02' is set on object 'Object Repository/Dept-User creation/input_BenchUnit_1'

2023-05-17 19:57:00 - [TEST_STEP][PASSED] - D15 = getAttribute(findTestObject("Dept-User creation/input_BenchUnit_1"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_BenchUnit_1' is: 'Test02'

2023-05-17 19:57:00 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_BenchUnit_1' is: 'Test02'

2023-05-17 19:57:00 - [TEST_STEP][PASSED] - println(D15): null

2023-05-17 19:57:00 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("Bench / Unit Name", 2), D15): Actual object 'Test02' and expected object 'Test02' are equal

2023-05-17 19:57:00 - [MESSAGE][PASSED] - Actual object 'Test02' and expected object 'Test02' are equal

2023-05-17 19:57:00 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_CLIA 1"), findTestData("Dept_Unit Data").getValue("CLIA License Number", 2)): Text '67890' is set on object 'Object Repository/Dept-User creation/input_CLIA 1'

2023-05-17 19:57:01 - [MESSAGE][PASSED] - Text '67890' is set on object 'Object Repository/Dept-User creation/input_CLIA 1'

2023-05-17 19:57:01 - [TEST_STEP][PASSED] - D16 = getAttribute(findTestObject("Dept-User creation/input_CLIA 1"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_CLIA 1' is: '67890'

2023-05-17 19:57:02 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_CLIA 1' is: '67890'

2023-05-17 19:57:02 - [TEST_STEP][PASSED] - println(D16): null

2023-05-17 19:57:02 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("CLIA License Number", 2), D16): Actual object '67890' and expected object '67890' are equal

2023-05-17 19:57:02 - [MESSAGE][PASSED] - Actual object '67890' and expected object '67890' are equal

2023-05-17 19:57:02 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_Joint Commission 1"), findTestData("Dept_Unit Data").getValue("Joint Commission", 2)): Text 'Commission' is set on object 'Object Repository/Dept-User creation/input_Joint Commission 1'

2023-05-17 19:57:03 - [MESSAGE][PASSED] - Text 'Commission' is set on object 'Object Repository/Dept-User creation/input_Joint Commission 1'

2023-05-17 19:57:03 - [TEST_STEP][PASSED] - D17 = getAttribute(findTestObject("Dept-User creation/input_Joint Commission 1"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_Joint Commission 1' is: 'Commission'

2023-05-17 19:57:03 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_Joint Commission 1' is: 'Commission'

2023-05-17 19:57:03 - [TEST_STEP][PASSED] - println(D17): null

2023-05-17 19:57:03 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("Joint Commission", 2), D17): Actual object 'Commission' and expected object 'Commission' are equal

2023-05-17 19:57:03 - [MESSAGE][PASSED] - Actual object 'Commission' and expected object 'Commission' are equal

2023-05-17 19:57:03 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_CAP 1"), findTestData("Dept_Unit Data").getValue("CAP", 2)): Text 'Pac' is set on object 'Object Repository/Dept-User creation/input_CAP 1'

2023-05-17 19:57:04 - [MESSAGE][PASSED] - Text 'Pac' is set on object 'Object Repository/Dept-User creation/input_CAP 1'

2023-05-17 19:57:04 - [TEST_STEP][PASSED] - D18 = getAttribute(findTestObject("Dept-User creation/input_CAP 1"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_CAP 1' is: 'Pac'

2023-05-17 19:57:05 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_CAP 1' is: 'Pac'

2023-05-17 19:57:05 - [TEST_STEP][PASSED] - println(D18): null

2023-05-17 19:57:05 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("CAP", 2), D18): Actual object 'Pac' and expected object 'Pac' are equal

2023-05-17 19:57:05 - [MESSAGE][PASSED] - Actual object 'Pac' and expected object 'Pac' are equal

2023-05-17 19:57:05 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_COLA 1"), findTestData("Dept_Unit Data").getValue("COLA", 2)): Text 'Aloc' is set on object 'Object Repository/Dept-User creation/input_COLA 1'

2023-05-17 19:57:06 - [MESSAGE][PASSED] - Text 'Aloc' is set on object 'Object Repository/Dept-User creation/input_COLA 1'

2023-05-17 19:57:06 - [TEST_STEP][PASSED] - D19 = getAttribute(findTestObject("Dept-User creation/input_COLA 1"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_COLA 1' is: 'Aloc'

2023-05-17 19:57:06 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_COLA 1' is: 'Aloc'

2023-05-17 19:57:06 - [TEST_STEP][PASSED] - println(D19): null

2023-05-17 19:57:06 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("COLA", 2), D19): Actual object 'Aloc' and expected object 'Aloc' are equal

2023-05-17 19:57:06 - [MESSAGE][PASSED] - Actual object 'Aloc' and expected object 'Aloc' are equal

2023-05-17 19:57:06 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_AABB 1"), findTestData("Dept_Unit Data").getValue("AABB", 2)): Text 'Bbaa' is set on object 'Object Repository/Dept-User creation/input_AABB 1'

2023-05-17 19:57:07 - [MESSAGE][PASSED] - Text 'Bbaa' is set on object 'Object Repository/Dept-User creation/input_AABB 1'

2023-05-17 19:57:07 - [TEST_STEP][PASSED] - D20 = getAttribute(findTestObject("Dept-User creation/input_AABB 1"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_AABB 1' is: 'Bbaa'

2023-05-17 19:57:08 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_AABB 1' is: 'Bbaa'

2023-05-17 19:57:08 - [TEST_STEP][PASSED] - println(D20): null

2023-05-17 19:57:08 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Dept_Unit Data").getValue("AABB", 2), D20): Actual object 'Bbaa' and expected object 'Bbaa' are equal

2023-05-17 19:57:08 - [MESSAGE][PASSED] - Actual object 'Bbaa' and expected object 'Bbaa' are equal

2023-05-17 19:57:08 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_AALA 1"), "AALA 1"): Text 'AALA 1' is set on object 'Object Repository/Dept-User creation/input_AALA 1'

2023-05-17 19:57:09 - [MESSAGE][PASSED] - Text 'AALA 1' is set on object 'Object Repository/Dept-User creation/input_AALA 1'

2023-05-17 19:57:09 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_AOAHFAP 1"), "AOAHFAP 1"): Text 'AOAHFAP 1' is set on object 'Object Repository/Dept-User creation/input_AOAHFAP 1'

2023-05-17 19:57:09 - [MESSAGE][PASSED] - Text 'AOAHFAP 1' is set on object 'Object Repository/Dept-User creation/input_AOAHFAP 1'

2023-05-17 19:57:09 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_ASHI 1"), "ASHI 1"): Text 'ASHI 1' is set on object 'Object Repository/Dept-User creation/input_ASHI 1'

2023-05-17 19:57:10 - [MESSAGE][PASSED] - Text 'ASHI 1' is set on object 'Object Repository/Dept-User creation/input_ASHI 1'

2023-05-17 19:57:10 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_NYDOH 1"), "NYDOH 1"): Text 'NYDOH 1' is set on object 'Object Repository/Dept-User creation/input_NYDOH 1'

2023-05-17 19:57:11 - [MESSAGE][PASSED] - Text 'NYDOH 1' is set on object 'Object Repository/Dept-User creation/input_NYDOH 1'

2023-05-17 19:57:11 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_CADOH 1"), "CADOH 1"): Text 'CADOH 1' is set on object 'Object Repository/Dept-User creation/input_CADOH 1'

2023-05-17 19:57:12 - [MESSAGE][PASSED] - Text 'CADOH 1' is set on object 'Object Repository/Dept-User creation/input_CADOH 1'

2023-05-17 19:57:12 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_FLDOH 1"), "FLDOH 1"): Text 'FLDOH 1' is set on object 'Object Repository/Dept-User creation/input_FLDOH 1'

2023-05-17 19:57:13 - [MESSAGE][PASSED] - Text 'FLDOH 1' is set on object 'Object Repository/Dept-User creation/input_FLDOH 1'

2023-05-17 19:57:13 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_NYSPFI 1"), "NYSPFI 1"): Text 'NYSPFI 1' is set on object 'Object Repository/Dept-User creation/input_NYSPFI 1'

2023-05-17 19:57:14 - [MESSAGE][PASSED] - Text 'NYSPFI 1' is set on object 'Object Repository/Dept-User creation/input_NYSPFI 1'

2023-05-17 19:57:14 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_AU-ID 1"), "AU-ID 1"): Text 'AU-ID 1' is set on object 'Object Repository/Dept-User creation/input_AU-ID 1'

2023-05-17 19:57:15 - [MESSAGE][PASSED] - Text 'AU-ID 1' is set on object 'Object Repository/Dept-User creation/input_AU-ID 1'

2023-05-17 19:57:15 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/button_Finish")): Object: 'Object Repository/Dept-User creation/button_Finish' is clicked on

2023-05-17 19:57:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/button_Finish' is clicked on

2023-05-17 19:57:15 - [TEST_STEP][PASSED] - Text = getText(findTestObject("Dept-User creation/div_Success Dpt Created")): Text of object 'Object Repository/Dept-User creation/div_Success Dpt Created' is: 'Success!
Department added successfully.'

2023-05-17 19:57:17 - [MESSAGE][PASSED] - Text of object 'Object Repository/Dept-User creation/div_Success Dpt Created' is: 'Success!
Department added successfully.'

2023-05-17 19:57:17 - [TEST_STEP][PASSED] - println(Text): null

2023-05-17 19:57:17 - [TEST_STEP][PASSED] - logInfo(Text): Success!
Department added successfully.

2023-05-17 19:57:17 - [MESSAGE][INFO] - Success!
Department added successfully.

2023-05-17 19:57:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2023-05-17 19:57:19 - [MESSAGE][PASSED] - Delayed 2 second(s)

2023-05-17 19:57:19 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Dept-User creation/input_ADD"), 2): Scroll to object 'Object Repository/Dept-User creation/input_ADD' successfully

2023-05-17 19:57:20 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Dept-User creation/input_ADD' successfully

2023-05-17 19:57:20 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/input_ADD")): Object: 'Object Repository/Dept-User creation/input_ADD' is clicked on

2023-05-17 19:57:20 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/input_ADD' is clicked on

2023-05-17 19:57:20 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/click_AddUser_button")): Object: 'Object Repository/Dept-User creation/click_AddUser_button' is clicked on

2023-05-17 19:57:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/click_AddUser_button' is clicked on

2023-05-17 19:57:21 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_Search_SignOffUser"), findTestData("SignOff User Data").getValue("SignOff Users", 1)): Text '01 AU_User ' is set on object 'Object Repository/Dept-User creation/input_Search_SignOffUser'

2023-05-17 19:57:22 - [MESSAGE][PASSED] - Text '01 AU_User ' is set on object 'Object Repository/Dept-User creation/input_Search_SignOffUser'

2023-05-17 19:57:22 - [TEST_STEP][PASSED] - D21 = getAttribute(findTestObject("Dept-User creation/input_Search_SignOffUser"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_Search_SignOffUser' is: '01 AU_User '

2023-05-17 19:57:23 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_Search_SignOffUser' is: '01 AU_User '

2023-05-17 19:57:23 - [TEST_STEP][PASSED] - println(D21): null

2023-05-17 19:57:23 - [TEST_STEP][PASSED] - verifyEqual(findTestData("SignOff User Data").getValue("SignOff Users", 1), D21): Actual object '01 AU_User ' and expected object '01 AU_User ' are equal

2023-05-17 19:57:23 - [MESSAGE][PASSED] - Actual object '01 AU_User ' and expected object '01 AU_User ' are equal

2023-05-17 19:57:23 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/click_search_SignOffUser")): Object: 'Object Repository/Dept-User creation/click_search_SignOffUser' is clicked on

2023-05-17 19:57:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/click_search_SignOffUser' is clicked on

2023-05-17 19:57:24 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/input_Add_SignInUser")): Object: 'Object Repository/Dept-User creation/input_Add_SignInUser' is clicked on

2023-05-17 19:57:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/input_Add_SignInUser' is clicked on

2023-05-17 19:57:24 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/input_AddOptional")): Object: 'Object Repository/Dept-User creation/input_AddOptional' is clicked on

2023-05-17 19:57:25 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/input_AddOptional' is clicked on

2023-05-17 19:57:25 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_Search_SignOffUser"), findTestData("SignOff User Data").getValue("SignOff Users", 2)): Text '02 AU_User ' is set on object 'Object Repository/Dept-User creation/input_Search_SignOffUser'

2023-05-17 19:57:26 - [MESSAGE][PASSED] - Text '02 AU_User ' is set on object 'Object Repository/Dept-User creation/input_Search_SignOffUser'

2023-05-17 19:57:26 - [TEST_STEP][PASSED] - D22 = getAttribute(findTestObject("Dept-User creation/input_Search_SignOffUser"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_Search_SignOffUser' is: '02 AU_User '

2023-05-17 19:57:27 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_Search_SignOffUser' is: '02 AU_User '

2023-05-17 19:57:27 - [TEST_STEP][PASSED] - println(D22): null

2023-05-17 19:57:27 - [TEST_STEP][PASSED] - verifyEqual(findTestData("SignOff User Data").getValue("SignOff Users", 2), D22): Actual object '02 AU_User ' and expected object '02 AU_User ' are equal

2023-05-17 19:57:27 - [MESSAGE][PASSED] - Actual object '02 AU_User ' and expected object '02 AU_User ' are equal

2023-05-17 19:57:27 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/click_search_SignOffUser")): Object: 'Object Repository/Dept-User creation/click_search_SignOffUser' is clicked on

2023-05-17 19:57:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/click_search_SignOffUser' is clicked on

2023-05-17 19:57:28 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/input_Add_SignInUser")): Object: 'Object Repository/Dept-User creation/input_Add_SignInUser' is clicked on

2023-05-17 19:57:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/input_Add_SignInUser' is clicked on

2023-05-17 19:57:28 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/input_Add Next User")): Object: 'Object Repository/Dept-User creation/input_Add Next User' is clicked on

2023-05-17 19:57:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/input_Add Next User' is clicked on

2023-05-17 19:57:29 - [TEST_STEP][PASSED] - setText(findTestObject("Dept-User creation/input_Search_SignOffUser"), findTestData("SignOff User Data").getValue("SignOff Users", 3)): Text '03 AU_User ' is set on object 'Object Repository/Dept-User creation/input_Search_SignOffUser'

2023-05-17 19:57:31 - [MESSAGE][PASSED] - Text '03 AU_User ' is set on object 'Object Repository/Dept-User creation/input_Search_SignOffUser'

2023-05-17 19:57:31 - [TEST_STEP][PASSED] - D23 = getAttribute(findTestObject("Dept-User creation/input_Search_SignOffUser"), "value"): Attribute 'value' of object 'Object Repository/Dept-User creation/input_Search_SignOffUser' is: '03 AU_User '

2023-05-17 19:57:32 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Dept-User creation/input_Search_SignOffUser' is: '03 AU_User '

2023-05-17 19:57:32 - [TEST_STEP][PASSED] - println(D23): null

2023-05-17 19:57:32 - [TEST_STEP][PASSED] - verifyEqual(findTestData("SignOff User Data").getValue("SignOff Users", 3), D23): Actual object '03 AU_User ' and expected object '03 AU_User ' are equal

2023-05-17 19:57:32 - [MESSAGE][PASSED] - Actual object '03 AU_User ' and expected object '03 AU_User ' are equal

2023-05-17 19:57:32 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/click_search_SignOffUser")): Object: 'Object Repository/Dept-User creation/click_search_SignOffUser' is clicked on

2023-05-17 19:57:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/click_search_SignOffUser' is clicked on

2023-05-17 19:57:32 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/input_Add_SignInUser")): Object: 'Object Repository/Dept-User creation/input_Add_SignInUser' is clicked on

2023-05-17 19:57:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/input_Add_SignInUser' is clicked on

2023-05-17 19:57:33 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/input_Save SignOffUser")): Object: 'Object Repository/Dept-User creation/input_Save SignOffUser' is clicked on

2023-05-17 19:57:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/input_Save SignOffUser' is clicked on

2023-05-17 19:57:34 - [TEST_STEP][PASSED] - signOffUsers = getText(findTestObject("Dept-User creation/div_Success Sign-off Chain")): Text of object 'Object Repository/Dept-User creation/div_Success Sign-off Chain' is: 'Success!
Sign-off Chain saved successfully'

2023-05-17 19:57:35 - [MESSAGE][PASSED] - Text of object 'Object Repository/Dept-User creation/div_Success Sign-off Chain' is: 'Success!
Sign-off Chain saved successfully'

2023-05-17 19:57:35 - [TEST_STEP][PASSED] - logInfo(signOffUsers): Success!
Sign-off Chain saved successfully

2023-05-17 19:57:35 - [MESSAGE][INFO] - Success!
Sign-off Chain saved successfully

2023-05-17 19:57:35 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/input_click_ReturnToDptment")): Object: 'Object Repository/Dept-User creation/input_click_ReturnToDptment' is clicked on

2023-05-17 19:57:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/input_click_ReturnToDptment' is clicked on

2023-05-17 19:57:36 - [TEST_STEP][PASSED] - click(findTestObject("Dept-User creation/input_click_ReturnToList")): Object: 'Object Repository/Dept-User creation/input_click_ReturnToList' is clicked on

2023-05-17 19:57:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Dept-User creation/input_click_ReturnToList' is clicked on

2023-05-17 19:57:37 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2023-05-17 19:57:39 - [MESSAGE][PASSED] - Delayed 2 second(s)

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - li = driver.findElements(By.xpath("//div[@class=" + "'col']")): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x1 = D + "- " + findTestData("Dept_Unit Data").getValue("Site", 1): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - println(x1): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - for ([i = 0, i < li.size(), (i++)]): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:39 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:40 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2 = li.get(i): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x3 = x2.getText(): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - if (x1.equals(x3)): null

2023-05-17 19:57:41 - [TEST_STEP][PASSED] - x2.click(): null

2023-05-17 19:57:42 - [TEST_STEP][PASSED] - break: null

2023-05-17 19:57:42 - [TEST_STEP][PASSED] - ScrollIntoCreatedDpts_Units.Screenshot(): Taking screenshot successfully

2023-05-17 19:57:43 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333663310.png]]

2023-05-17 19:57:44 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333664164.png]]

2023-05-17 19:57:45 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333665005.png]]

2023-05-17 19:57:46 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333665863.png]]]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Instrument Creation - Suite" time="211.417" classname="Test Cases/Instrument Creation - Suite" status="PASSED">
         <system-out><![CDATA[2023-05-17 19:57:46 - [TEST_CASE][PASSED] - Test Cases/Instrument Creation - Suite: Test Cases/Instrument Creation - Suite

2023-05-17 19:57:49 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2023-05-17 19:57:49 - [TEST_STEP][PASSED] - actions = sendKeys(HOME).perform(): null

2023-05-17 19:57:49 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/span_Instruments")): Object: 'Object Repository/Add Instrument/span_Instruments' is clicked on

2023-05-17 19:57:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/span_Instruments' is clicked on

2023-05-17 19:57:50 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Add Instrument Type")): Object: 'Object Repository/Add Instrument/button_Add Instrument Type' is clicked on

2023-05-17 19:57:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Add Instrument Type' is clicked on

2023-05-17 19:57:56 - [TEST_STEP][PASSED] - dateFormat = new java.text.SimpleDateFormat(yyyy/dd/MM HH:mm:ss): null

2023-05-17 19:57:56 - [TEST_STEP][PASSED] - date = new java.util.Date(): null

2023-05-17 19:57:56 - [TEST_STEP][PASSED] - a = dateFormat.format(date): null

2023-05-17 19:57:56 - [TEST_STEP][PASSED] - println(a): null

2023-05-17 19:57:56 - [TEST_STEP][PASSED] - b = " - ": null

2023-05-17 19:57:56 - [TEST_STEP][PASSED] - Ins = findTestData("Add Inst-Type Data").getValue("InsType_Name", 1) + b + a: null

2023-05-17 19:57:56 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/InstrumentTypeName"), Ins): Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Add Instrument/InstrumentTypeName'

2023-05-17 19:57:57 - [MESSAGE][PASSED] - Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Add Instrument/InstrumentTypeName'

2023-05-17 19:57:57 - [TEST_STEP][PASSED] - Excel.writeData("ELL_Add Instrument & Type", "Add Inst-Type", 1, 1, Ins): null

2023-05-17 19:57:57 - [TEST_STEP][PASSED] - println(Ins): null

2023-05-17 19:57:57 - [TEST_STEP][PASSED] - logInfo(Ins): Test1.1 - 2023/17/05 19:57:56

2023-05-17 19:57:57 - [MESSAGE][INFO] - Test1.1 - 2023/17/05 19:57:56

2023-05-17 19:57:57 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Manufacturer"), "Lot Manufacture"): Text 'Lot Manufacture' is set on object 'Object Repository/Add Instrument/input_Manufacturer'

2023-05-17 19:57:58 - [MESSAGE][PASSED] - Text 'Lot Manufacture' is set on object 'Object Repository/Add Instrument/input_Manufacturer'

2023-05-17 19:57:58 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Model"), "LO-01"): Text 'LO-01' is set on object 'Object Repository/Add Instrument/input_Model'

2023-05-17 19:57:59 - [MESSAGE][PASSED] - Text 'LO-01' is set on object 'Object Repository/Add Instrument/input_Model'

2023-05-17 19:57:59 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Next")): Object: 'Object Repository/Add Instrument/button_Next' is clicked on

2023-05-17 19:58:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Next' is clicked on

2023-05-17 19:58:00 - [TEST_STEP][PASSED] - click(findTestObject("LOT/click-addReagentControlBtn")): Object: 'Object Repository/LOT/click-addReagentControlBtn' is clicked on

2023-05-17 19:58:00 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/click-addReagentControlBtn' is clicked on

2023-05-17 19:58:00 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/enter-LotName"), findTestData("Lot Data").getValue("Lot Name", 1)): Text 'Chemical Lot -1' is set on object 'Object Repository/LOT/enter-LotName'

2023-05-17 19:58:01 - [MESSAGE][PASSED] - Text 'Chemical Lot -1' is set on object 'Object Repository/LOT/enter-LotName'

2023-05-17 19:58:01 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/enter-Lot Notes"), "Checking Lot Notes"): Text 'Checking Lot Notes' is set on object 'Object Repository/LOT/enter-Lot Notes'

2023-05-17 19:58:02 - [MESSAGE][PASSED] - Text 'Checking Lot Notes' is set on object 'Object Repository/LOT/enter-Lot Notes'

2023-05-17 19:58:02 - [TEST_STEP][PASSED] - click(findTestObject("LOT/btn-Save Lot")): Object: 'Object Repository/LOT/btn-Save Lot' is clicked on

2023-05-17 19:58:02 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/btn-Save Lot' is clicked on

2023-05-17 19:58:02 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/span_Add Maintenance Task")): Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:58:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:58:04 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Maintenance Task"), findTestData("Lot Data").getValue("Lot-Task Name", 1)): Text 'Task - 1' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:58:04 - [MESSAGE][PASSED] - Text 'Task - 1' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:58:04 - [TEST_STEP][PASSED] - MTName_01 = getAttribute(findTestObject("Add Instrument/input_Maintenance Task"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 1'

2023-05-17 19:58:05 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 1'

2023-05-17 19:58:05 - [TEST_STEP][PASSED] - println(MTName_01): null

2023-05-17 19:58:05 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Lot Data").getValue("Lot-Task Name", 1), MTName_01): Actual object 'Task - 1' and expected object 'Task - 1' are equal

2023-05-17 19:58:05 - [MESSAGE][PASSED] - Actual object 'Task - 1' and expected object 'Task - 1' are equal

2023-05-17 19:58:05 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Lot Data").getValue("Lot-Frequency", 1), true): All options with label 'Every 48 Hours, Lead time 2 hrs, Overdue after 5 hrs' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 19:58:06 - [MESSAGE][PASSED] - All options with label 'Every 48 Hours, Lead time 2 hrs, Overdue after 5 hrs' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 19:58:06 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Lot Data").getValue("Lot-Frequency", 1), false, 0): 1 option(s) with label 'Every 48 Hours, Lead time 2 hrs, Overdue after 5 hrs' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 19:58:07 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:07 - [MESSAGE][PASSED] - 1 option(s) with label 'Every 48 Hours, Lead time 2 hrs, Overdue after 5 hrs' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 19:58:07 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("LOT/Link-lotList"), findTestData("Lot Data").getValue("Lot Name", 1), false): All options with label 'Chemical Lot -1' are selected in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:58:08 - [MESSAGE][PASSED] - All options with label 'Chemical Lot -1' are selected in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:58:08 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("LOT/Link-lotList"), findTestData("Lot Data").getValue("Lot Name", 1), false, 0): 1 option(s) with label 'Chemical Lot -1' is/are present in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:58:08 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:09 - [MESSAGE][PASSED] - 1 option(s) with label 'Chemical Lot -1' is/are present in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:58:09 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Add Data Field")): Object: 'Object Repository/Add Instrument/button_Add Data Field' is clicked on

2023-05-17 19:58:09 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Add Data Field' is clicked on

2023-05-17 19:58:09 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LOT/scrollIntoField Label"), 0): Scroll to object 'Object Repository/LOT/scrollIntoField Label' successfully

2023-05-17 19:58:09 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:10 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LOT/scrollIntoField Label' successfully

2023-05-17 19:58:10 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/input_Field Label_Number"), "T1-PH Value 1"): Text 'T1-PH Value 1' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:11 - [MESSAGE][PASSED] - Text 'T1-PH Value 1' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:11 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/select_Text_Number"), "1", true): All options with value '1' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:12 - [MESSAGE][PASSED] - All options with value '1' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:12 - [TEST_STEP][PASSED] - click(findTestObject("LOT/button_Add Data Field")): Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:12 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:12 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/input_Field Label_Number"), "T1-PH Value 2"): Text 'T1-PH Value 2' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:13 - [MESSAGE][PASSED] - Text 'T1-PH Value 2' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:13 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/select_Text_Number"), "2", true): All options with value '2' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:15 - [MESSAGE][PASSED] - All options with value '2' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:15 - [TEST_STEP][PASSED] - click(findTestObject("LOT/button_Add Data Field")): Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:15 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:15 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/input_Field Label_Number"), "T1-PH Value 3"): Text 'T1-PH Value 3' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:16 - [MESSAGE][PASSED] - Text 'T1-PH Value 3' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:16 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/select_Text_Number"), "3", true): All options with value '3' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:17 - [MESSAGE][PASSED] - All options with value '3' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:17 - [TEST_STEP][PASSED] - click(findTestObject("LOT/button_Add Data Field")): Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:18 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:18 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/input_Field Label_Number"), "T1-PH Value 4"): Text 'T1-PH Value 4' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:19 - [MESSAGE][PASSED] - Text 'T1-PH Value 4' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:19 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/select_Text_Number"), "5", true): All options with value '5' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:20 - [MESSAGE][PASSED] - All options with value '5' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:20 - [TEST_STEP][PASSED] - click(findTestObject("LOT/Lot-Save Task")): Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:58:21 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:58:21 - [TEST_STEP][PASSED] - click(findTestObject("LOT/Lot-Clone")): Object: 'Object Repository/LOT/Lot-Clone' is clicked on

2023-05-17 19:58:22 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/Lot-Clone' is clicked on

2023-05-17 19:58:22 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LOT/scrollIntoField Label"), 0): Scroll to object 'Object Repository/LOT/scrollIntoField Label' successfully

2023-05-17 19:58:22 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:23 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LOT/scrollIntoField Label' successfully

2023-05-17 19:58:23 - [TEST_STEP][PASSED] - Clone_MTName_02 = getAttribute(findTestObject("Add Instrument/input_Maintenance Task"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 1 (Copy)'

2023-05-17 19:58:23 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 1 (Copy)'

2023-05-17 19:58:23 - [TEST_STEP][PASSED] - println(Clone_MTName_02): null

2023-05-17 19:58:23 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Lot Data").getValue("Lot-Task Name", 1) + " (Copy)", Clone_MTName_02): Actual object 'Task - 1 (Copy)' and expected object 'Task - 1 (Copy)' are equal

2023-05-17 19:58:23 - [MESSAGE][PASSED] - Actual object 'Task - 1 (Copy)' and expected object 'Task - 1 (Copy)' are equal

2023-05-17 19:58:23 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Lot Data").getValue("Lot-Frequency", 1), false, 0): 1 option(s) with label 'Every 48 Hours, Lead time 2 hrs, Overdue after 5 hrs' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 19:58:23 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:24 - [MESSAGE][PASSED] - 1 option(s) with label 'Every 48 Hours, Lead time 2 hrs, Overdue after 5 hrs' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 19:58:24 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("LOT/Link-lotList"), findTestData("Lot Data").getValue("Lot Name", 1), false, 0): 1 option(s) with label 'Chemical Lot -1' is/are present in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:58:24 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:25 - [MESSAGE][PASSED] - 1 option(s) with label 'Chemical Lot -1' is/are present in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:58:25 - [TEST_STEP][PASSED] - clone_DF_ValT1 = getAttribute(findTestObject("LOT/clone_DF -T1"), "value"): Attribute 'value' of object 'Object Repository/LOT/clone_DF -T1' is: 'T1-PH Value 1'

2023-05-17 19:58:25 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/LOT/clone_DF -T1' is: 'T1-PH Value 1'

2023-05-17 19:58:25 - [TEST_STEP][PASSED] - verifyEqual("T1-PH Value 1", clone_DF_ValT1): Actual object 'T1-PH Value 1' and expected object 'T1-PH Value 1' are equal

2023-05-17 19:58:25 - [MESSAGE][PASSED] - Actual object 'T1-PH Value 1' and expected object 'T1-PH Value 1' are equal

2023-05-17 19:58:25 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("LOT/clone_FT-F1"), "Text", false, 0): 1 option(s) with label 'Text' is/are present in object 'Object Repository/LOT/clone_FT-F1' 

2023-05-17 19:58:26 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:26 - [MESSAGE][PASSED] - 1 option(s) with label 'Text' is/are present in object 'Object Repository/LOT/clone_FT-F1' 

2023-05-17 19:58:26 - [TEST_STEP][PASSED] - clone_DF_ValT2 = getAttribute(findTestObject("LOT/clone_DF - T2"), "value"): Attribute 'value' of object 'Object Repository/LOT/clone_DF - T2' is: 'T1-PH Value 2'

2023-05-17 19:58:27 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/LOT/clone_DF - T2' is: 'T1-PH Value 2'

2023-05-17 19:58:27 - [TEST_STEP][PASSED] - verifyEqual("T1-PH Value 2", clone_DF_ValT2): Actual object 'T1-PH Value 2' and expected object 'T1-PH Value 2' are equal

2023-05-17 19:58:27 - [MESSAGE][PASSED] - Actual object 'T1-PH Value 2' and expected object 'T1-PH Value 2' are equal

2023-05-17 19:58:27 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("LOT/clone_FT-F2"), "Text Area", false, 0): 1 option(s) with label 'Text Area' is/are present in object 'Object Repository/LOT/clone_FT-F2' 

2023-05-17 19:58:27 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:27 - [MESSAGE][PASSED] - 1 option(s) with label 'Text Area' is/are present in object 'Object Repository/LOT/clone_FT-F2' 

2023-05-17 19:58:27 - [TEST_STEP][PASSED] - clone_DF_ValT3 = getAttribute(findTestObject("LOT/clone_DF - T3"), "value"): Attribute 'value' of object 'Object Repository/LOT/clone_DF - T3' is: 'T1-PH Value 3'

2023-05-17 19:58:28 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/LOT/clone_DF - T3' is: 'T1-PH Value 3'

2023-05-17 19:58:28 - [TEST_STEP][PASSED] - verifyEqual("T1-PH Value 3", clone_DF_ValT3): Actual object 'T1-PH Value 3' and expected object 'T1-PH Value 3' are equal

2023-05-17 19:58:28 - [MESSAGE][PASSED] - Actual object 'T1-PH Value 3' and expected object 'T1-PH Value 3' are equal

2023-05-17 19:58:28 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("LOT/clone_FT-F3"), "Number", false, 0): 1 option(s) with label 'Number' is/are present in object 'Object Repository/LOT/clone_FT-F3' 

2023-05-17 19:58:28 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:28 - [MESSAGE][PASSED] - 1 option(s) with label 'Number' is/are present in object 'Object Repository/LOT/clone_FT-F3' 

2023-05-17 19:58:28 - [TEST_STEP][PASSED] - clone_DF_ValT4 = getAttribute(findTestObject("LOT/clone_DF - T4"), "value"): Attribute 'value' of object 'Object Repository/LOT/clone_DF - T4' is: 'T1-PH Value 4'

2023-05-17 19:58:29 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/LOT/clone_DF - T4' is: 'T1-PH Value 4'

2023-05-17 19:58:29 - [TEST_STEP][PASSED] - verifyEqual("T1-PH Value 4", clone_DF_ValT4): Actual object 'T1-PH Value 4' and expected object 'T1-PH Value 4' are equal

2023-05-17 19:58:29 - [MESSAGE][PASSED] - Actual object 'T1-PH Value 4' and expected object 'T1-PH Value 4' are equal

2023-05-17 19:58:29 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("LOT/clone_FT-F4"), "File Attachment", false, 0): 1 option(s) with label 'File Attachment' is/are present in object 'Object Repository/LOT/clone_FT-F4' 

2023-05-17 19:58:29 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:30 - [MESSAGE][PASSED] - 1 option(s) with label 'File Attachment' is/are present in object 'Object Repository/LOT/clone_FT-F4' 

2023-05-17 19:58:30 - [TEST_STEP][PASSED] - click(findTestObject("LOT/Lot-Save Task")): Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:58:30 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:58:30 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/span_Add Maintenance Task")): Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:58:31 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:58:31 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Maintenance Task"), findTestData("Lot Data").getValue("Lot-Task Name", 2)): Text 'Task - 2' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:58:32 - [MESSAGE][PASSED] - Text 'Task - 2' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:58:32 - [TEST_STEP][PASSED] - MTName_03 = getAttribute(findTestObject("Add Instrument/input_Maintenance Task"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 2'

2023-05-17 19:58:33 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 2'

2023-05-17 19:58:33 - [TEST_STEP][PASSED] - println(MTName_03): null

2023-05-17 19:58:33 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Lot Data").getValue("Lot-Task Name", 2), MTName_03): Actual object 'Task - 2' and expected object 'Task - 2' are equal

2023-05-17 19:58:33 - [MESSAGE][PASSED] - Actual object 'Task - 2' and expected object 'Task - 2' are equal

2023-05-17 19:58:33 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/Fixed")): Object: 'Object Repository/Add Instrument/Fixed' is clicked on

2023-05-17 19:58:33 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/Fixed' is clicked on

2023-05-17 19:58:33 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/FixedFreq"), findTestData("Lot Data").getValue("Lot-Frequency", 2), true): All options with label '8 Hours' are selected in object 'Object Repository/Add Instrument/FixedFreq'  using regular expression

2023-05-17 19:58:34 - [MESSAGE][PASSED] - All options with label '8 Hours' are selected in object 'Object Repository/Add Instrument/FixedFreq'  using regular expression

2023-05-17 19:58:34 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/FixedFreq"), findTestData("Lot Data").getValue("Lot-Frequency", 2), false, 0): 1 option(s) with label '8 Hours' is/are present in object 'Object Repository/Add Instrument/FixedFreq' 

2023-05-17 19:58:34 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:35 - [MESSAGE][PASSED] - 1 option(s) with label '8 Hours' is/are present in object 'Object Repository/Add Instrument/FixedFreq' 

2023-05-17 19:58:35 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("LOT/Link-lotList"), findTestData("Lot Data").getValue("Lot Name", 1), false): All options with label 'Chemical Lot -1' are selected in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:58:36 - [MESSAGE][PASSED] - All options with label 'Chemical Lot -1' are selected in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:58:36 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("LOT/Link-lotList"), findTestData("Lot Data").getValue("Lot Name", 1), false, 0): 1 option(s) with label 'Chemical Lot -1' is/are present in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:58:36 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:37 - [MESSAGE][PASSED] - 1 option(s) with label 'Chemical Lot -1' is/are present in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:58:37 - [TEST_STEP][PASSED] - click(findTestObject("LOT/button_Add Data Field")): Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:37 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:37 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/input_Field Label_Number"), "T2-PH Value 1"): Text 'T2-PH Value 1' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:38 - [MESSAGE][PASSED] - Text 'T2-PH Value 1' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:38 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/select_Text_Number"), "3", true): All options with value '3' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:40 - [MESSAGE][PASSED] - All options with value '3' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:40 - [TEST_STEP][PASSED] - click(findTestObject("LOT/button_Add Data Field")): Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:40 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:40 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/input_Field Label_Number"), "T2-PH Value 2"): Text 'T2-PH Value 2' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:41 - [MESSAGE][PASSED] - Text 'T2-PH Value 2' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:41 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/select_Text_Number"), "3", true): All options with value '3' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:42 - [MESSAGE][PASSED] - All options with value '3' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:58:42 - [TEST_STEP][PASSED] - click(findTestObject("LOT/click-RequiredField")): Object: 'Object Repository/LOT/click-RequiredField' is clicked on

2023-05-17 19:58:43 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/click-RequiredField' is clicked on

2023-05-17 19:58:43 - [TEST_STEP][PASSED] - click(findTestObject("LOT/click-ValidateField")): Object: 'Object Repository/LOT/click-ValidateField' is clicked on

2023-05-17 19:58:43 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/click-ValidateField' is clicked on

2023-05-17 19:58:43 - [TEST_STEP][PASSED] - click(findTestObject("LOT/button_Add Data Field")): Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:44 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:44 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/input_Text_Defined Value"), "T2-PH Value 3"): Text 'T2-PH Value 3' is set on object 'Object Repository/LOT/input_Text_Defined Value'

2023-05-17 19:58:45 - [MESSAGE][PASSED] - Text 'T2-PH Value 3' is set on object 'Object Repository/LOT/input_Text_Defined Value'

2023-05-17 19:58:45 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/select__Text_Defined Value"), "4", true): All options with value '4' are selected in object 'Object Repository/LOT/select__Text_Defined Value'  using regular expression

2023-05-17 19:58:46 - [MESSAGE][PASSED] - All options with value '4' are selected in object 'Object Repository/LOT/select__Text_Defined Value'  using regular expression

2023-05-17 19:58:46 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LOT/scroll-Add Data field"), 0): Scroll to object 'Object Repository/LOT/scroll-Add Data field' successfully

2023-05-17 19:58:46 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:47 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LOT/scroll-Add Data field' successfully

2023-05-17 19:58:47 - [TEST_STEP][PASSED] - setText(findTestObject("Lot/txt_Validation"), "5"): Text '5' is set on object 'Object Repository/Lot/txt_Validation'

2023-05-17 19:58:47 - [MESSAGE][PASSED] - Text '5' is set on object 'Object Repository/Lot/txt_Validation'

2023-05-17 19:58:47 - [TEST_STEP][PASSED] - click(findTestObject("LOT/click-AddMoreValidation")): Object: 'Object Repository/LOT/click-AddMoreValidation' is clicked on

2023-05-17 19:58:48 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/click-AddMoreValidation' is clicked on

2023-05-17 19:58:48 - [TEST_STEP][PASSED] - setText(findTestObject("Lot/txt_Validation"), "15"): Text '15' is set on object 'Object Repository/Lot/txt_Validation'

2023-05-17 19:58:49 - [MESSAGE][PASSED] - Text '15' is set on object 'Object Repository/Lot/txt_Validation'

2023-05-17 19:58:49 - [TEST_STEP][PASSED] - click(findTestObject("LOT/click-AddMoreValidation")): Object: 'Object Repository/LOT/click-AddMoreValidation' is clicked on

2023-05-17 19:58:49 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/click-AddMoreValidation' is clicked on

2023-05-17 19:58:49 - [TEST_STEP][PASSED] - setText(findTestObject("Lot/txt_Validation"), "25"): Text '25' is set on object 'Object Repository/Lot/txt_Validation'

2023-05-17 19:58:50 - [MESSAGE][PASSED] - Text '25' is set on object 'Object Repository/Lot/txt_Validation'

2023-05-17 19:58:50 - [TEST_STEP][PASSED] - click(findTestObject("LOT/Lot-Save Task")): Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:58:51 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:58:51 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/span_Add Maintenance Task")): Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:58:52 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:58:52 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Maintenance Task"), findTestData("Lot Data").getValue("Lot-Task Name", 3)): Text 'Task - 3' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:58:53 - [MESSAGE][PASSED] - Text 'Task - 3' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:58:53 - [TEST_STEP][PASSED] - MTName_04 = getAttribute(findTestObject("Add Instrument/input_Maintenance Task"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 3'

2023-05-17 19:58:53 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 3'

2023-05-17 19:58:53 - [TEST_STEP][PASSED] - println(MTName_04): null

2023-05-17 19:58:53 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Lot Data").getValue("Lot-Task Name", 3), MTName_04): Actual object 'Task - 3' and expected object 'Task - 3' are equal

2023-05-17 19:58:53 - [MESSAGE][PASSED] - Actual object 'Task - 3' and expected object 'Task - 3' are equal

2023-05-17 19:58:53 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/Fixed")): Object: 'Object Repository/Add Instrument/Fixed' is clicked on

2023-05-17 19:58:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/Fixed' is clicked on

2023-05-17 19:58:54 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/FixedFreq"), findTestData("Lot Data").getValue("Lot-Frequency", 3), true): All options with label '12 Hours' are selected in object 'Object Repository/Add Instrument/FixedFreq'  using regular expression

2023-05-17 19:58:55 - [MESSAGE][PASSED] - All options with label '12 Hours' are selected in object 'Object Repository/Add Instrument/FixedFreq'  using regular expression

2023-05-17 19:58:55 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/FixedFreq"), findTestData("Lot Data").getValue("Lot-Frequency", 3), false, 0): 1 option(s) with label '12 Hours' is/are present in object 'Object Repository/Add Instrument/FixedFreq' 

2023-05-17 19:58:55 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:56 - [MESSAGE][PASSED] - 1 option(s) with label '12 Hours' is/are present in object 'Object Repository/Add Instrument/FixedFreq' 

2023-05-17 19:58:56 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LOT/scroll-Add Data field"), 0): Scroll to object 'Object Repository/LOT/scroll-Add Data field' successfully

2023-05-17 19:58:56 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:58:57 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LOT/scroll-Add Data field' successfully

2023-05-17 19:58:57 - [TEST_STEP][PASSED] - click(findTestObject("LOT/click-Use a LOT")): Object: 'Object Repository/LOT/click-Use a LOT' is clicked on

2023-05-17 19:58:57 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/click-Use a LOT' is clicked on

2023-05-17 19:58:57 - [TEST_STEP][PASSED] - click(findTestObject("LOT/button_Add Data Field")): Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:58 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:58:58 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/input_Field Label_Number"), "T3-PH Value 1"): Text 'T3-PH Value 1' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:58 - [MESSAGE][PASSED] - Text 'T3-PH Value 1' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:58:58 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/select_Text_Number"), "3", true): All options with value '3' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:59:00 - [MESSAGE][PASSED] - All options with value '3' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:59:00 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/Greater Than-Value"), "1", true): All options with value '1' are selected in object 'Object Repository/LOT/Greater Than-Value'  using regular expression

2023-05-17 19:59:01 - [MESSAGE][PASSED] - All options with value '1' are selected in object 'Object Repository/LOT/Greater Than-Value'  using regular expression

2023-05-17 19:59:01 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtbox-greaterThan"), "12"): Text '12' is set on object 'Object Repository/LOT/txtbox-greaterThan'

2023-05-17 19:59:02 - [MESSAGE][PASSED] - Text '12' is set on object 'Object Repository/LOT/txtbox-greaterThan'

2023-05-17 19:59:02 - [TEST_STEP][PASSED] - click(findTestObject("LOT/click-AddMoreValidation")): Object: 'Object Repository/LOT/click-AddMoreValidation' is clicked on

2023-05-17 19:59:02 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/click-AddMoreValidation' is clicked on

2023-05-17 19:59:02 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("LOT/condition"), "AND", false): All options with label 'AND' are selected in object 'Object Repository/LOT/condition' 

2023-05-17 19:59:03 - [MESSAGE][PASSED] - All options with label 'AND' are selected in object 'Object Repository/LOT/condition' 

2023-05-17 19:59:03 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/Less Than-Value"), "2", true): All options with value '2' are selected in object 'Object Repository/LOT/Less Than-Value'  using regular expression

2023-05-17 19:59:04 - [MESSAGE][PASSED] - All options with value '2' are selected in object 'Object Repository/LOT/Less Than-Value'  using regular expression

2023-05-17 19:59:04 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtbox-lessThan"), "20"): Text '20' is set on object 'Object Repository/LOT/txtbox-lessThan'

2023-05-17 19:59:05 - [MESSAGE][PASSED] - Text '20' is set on object 'Object Repository/LOT/txtbox-lessThan'

2023-05-17 19:59:05 - [TEST_STEP][PASSED] - click(findTestObject("LOT/DF_Clone")): Object: 'Object Repository/LOT/DF_Clone' is clicked on

2023-05-17 19:59:06 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/DF_Clone' is clicked on

2023-05-17 19:59:06 - [TEST_STEP][PASSED] - clone_DFText = getAttribute(findTestObject("LOT/clone_DF"), "value"): Attribute 'value' of object 'Object Repository/LOT/clone_DF' is: 'T3-PH Value 1 (Copy)'

2023-05-17 19:59:06 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/LOT/clone_DF' is: 'T3-PH Value 1 (Copy)'

2023-05-17 19:59:06 - [TEST_STEP][PASSED] - verifyEqual("T3-PH Value 1" + " (Copy)", clone_DFText): Actual object 'T3-PH Value 1 (Copy)' and expected object 'T3-PH Value 1 (Copy)' are equal

2023-05-17 19:59:06 - [MESSAGE][PASSED] - Actual object 'T3-PH Value 1 (Copy)' and expected object 'T3-PH Value 1 (Copy)' are equal

2023-05-17 19:59:06 - [TEST_STEP][PASSED] - verifyOptionSelectedByLabel(findTestObject("LOT/clone_FT-F2"), "Number", false, 0): All options with label 'Number' are selected in object 'Object Repository/LOT/clone_FT-F2' 

2023-05-17 19:59:06 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:59:08 - [MESSAGE][PASSED] - All options with label 'Number' are selected in object 'Object Repository/LOT/clone_FT-F2' 

2023-05-17 19:59:08 - [TEST_STEP][PASSED] - verifyOptionSelectedByLabel(findTestObject("LOT/clone_greaterThan"), "Greater Than", false, 0): All options with label 'Greater Than' are selected in object 'Object Repository/LOT/clone_greaterThan' 

2023-05-17 19:59:08 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:59:09 - [MESSAGE][PASSED] - All options with label 'Greater Than' are selected in object 'Object Repository/LOT/clone_greaterThan' 

2023-05-17 19:59:09 - [TEST_STEP][PASSED] - clone_VF01 = getAttribute(findTestObject("LOT/txtbox-greaterThan"), "value"): Attribute 'value' of object 'Object Repository/LOT/txtbox-greaterThan' is: '12'

2023-05-17 19:59:10 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/LOT/txtbox-greaterThan' is: '12'

2023-05-17 19:59:10 - [TEST_STEP][PASSED] - println(clone_VF01): null

2023-05-17 19:59:10 - [TEST_STEP][PASSED] - verifyEqual("12", clone_VF01): Actual object '12' and expected object '12' are equal

2023-05-17 19:59:10 - [MESSAGE][PASSED] - Actual object '12' and expected object '12' are equal

2023-05-17 19:59:10 - [TEST_STEP][PASSED] - verifyOptionSelectedByLabel(findTestObject("LOT/clone_condition"), "AND", false, 0): All options with label 'AND' are selected in object 'Object Repository/LOT/clone_condition' 

2023-05-17 19:59:10 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:59:11 - [MESSAGE][PASSED] - All options with label 'AND' are selected in object 'Object Repository/LOT/clone_condition' 

2023-05-17 19:59:11 - [TEST_STEP][PASSED] - verifyOptionSelectedByLabel(findTestObject("LOT/clone_lessThan"), "Less Than", false, 0): All options with label 'Less Than' are selected in object 'Object Repository/LOT/clone_lessThan' 

2023-05-17 19:59:11 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:59:12 - [MESSAGE][PASSED] - All options with label 'Less Than' are selected in object 'Object Repository/LOT/clone_lessThan' 

2023-05-17 19:59:12 - [TEST_STEP][PASSED] - clone_VF02 = getAttribute(findTestObject("LOT/txtbox-lessThan"), "value"): Attribute 'value' of object 'Object Repository/LOT/txtbox-lessThan' is: '20'

2023-05-17 19:59:13 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/LOT/txtbox-lessThan' is: '20'

2023-05-17 19:59:13 - [TEST_STEP][PASSED] - println(clone_VF02): null

2023-05-17 19:59:13 - [TEST_STEP][PASSED] - verifyEqual("20", clone_VF02): Actual object '20' and expected object '20' are equal

2023-05-17 19:59:13 - [MESSAGE][PASSED] - Actual object '20' and expected object '20' are equal

2023-05-17 19:59:13 - [TEST_STEP][PASSED] - click(findTestObject("LOT/Lot-Save Task")): Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:59:13 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:59:13 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/span_Add Maintenance Task")): Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:59:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:59:14 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Maintenance Task"), findTestData("Lot Data").getValue("Lot-Task Name", 4)): Text 'Task - 4' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:59:15 - [MESSAGE][PASSED] - Text 'Task - 4' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:59:15 - [TEST_STEP][PASSED] - MTName_05 = getAttribute(findTestObject("Add Instrument/input_Maintenance Task"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 4'

2023-05-17 19:59:16 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 4'

2023-05-17 19:59:16 - [TEST_STEP][PASSED] - println(MTName_05): null

2023-05-17 19:59:16 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Lot Data").getValue("Lot-Task Name", 4), MTName_05): Actual object 'Task - 4' and expected object 'Task - 4' are equal

2023-05-17 19:59:16 - [MESSAGE][PASSED] - Actual object 'Task - 4' and expected object 'Task - 4' are equal

2023-05-17 19:59:16 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Lot Data").getValue("Lot-Frequency", 4), true): All options with label 'Unscheduled' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 19:59:17 - [MESSAGE][PASSED] - All options with label 'Unscheduled' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 19:59:17 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Lot Data").getValue("Lot-Frequency", 4), false, 0): 1 option(s) with label 'Unscheduled' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 19:59:17 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:59:18 - [MESSAGE][PASSED] - 1 option(s) with label 'Unscheduled' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 19:59:18 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("LOT/Link-lotList"), findTestData("Lot Data").getValue("Lot Name", 1), false): All options with label 'Chemical Lot -1' are selected in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:59:19 - [MESSAGE][PASSED] - All options with label 'Chemical Lot -1' are selected in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:59:19 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("LOT/Link-lotList"), findTestData("Lot Data").getValue("Lot Name", 1), false, 0): 1 option(s) with label 'Chemical Lot -1' is/are present in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:59:19 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:59:20 - [MESSAGE][PASSED] - 1 option(s) with label 'Chemical Lot -1' is/are present in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:59:20 - [TEST_STEP][PASSED] - click(findTestObject("LOT/button_Add Data Field")): Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:59:21 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:59:21 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/input_Field Label_Number"), "T4-PH Value 1"): Text 'T4-PH Value 1' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:59:22 - [MESSAGE][PASSED] - Text 'T4-PH Value 1' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:59:22 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/select_Text_Number"), "3", true): All options with value '3' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:59:23 - [MESSAGE][PASSED] - All options with value '3' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:59:23 - [TEST_STEP][PASSED] - click(findTestObject("LOT/Lot-Save Task")): Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:59:23 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:59:23 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/span_Add Maintenance Task")): Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:59:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:59:24 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Maintenance Task"), findTestData("Lot Data").getValue("Lot-Task Name", 5)): Text 'Task - 5' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:59:25 - [MESSAGE][PASSED] - Text 'Task - 5' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:59:25 - [TEST_STEP][PASSED] - MTName_06 = getAttribute(findTestObject("Add Instrument/input_Maintenance Task"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 5'

2023-05-17 19:59:26 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 5'

2023-05-17 19:59:26 - [TEST_STEP][PASSED] - println(MTName_06): null

2023-05-17 19:59:26 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Lot Data").getValue("Lot-Task Name", 5), MTName_06): Actual object 'Task - 5' and expected object 'Task - 5' are equal

2023-05-17 19:59:26 - [MESSAGE][PASSED] - Actual object 'Task - 5' and expected object 'Task - 5' are equal

2023-05-17 19:59:26 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Lot Data").getValue("Lot-Frequency", 5), true): All options with label 'Weekly, Lead time 24 hrs, Overdue after 24 hrs' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 19:59:27 - [MESSAGE][PASSED] - All options with label 'Weekly, Lead time 24 hrs, Overdue after 24 hrs' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 19:59:27 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Lot Data").getValue("Lot-Frequency", 5), false, 0): 1 option(s) with label 'Weekly, Lead time 24 hrs, Overdue after 24 hrs' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 19:59:27 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:59:28 - [MESSAGE][PASSED] - 1 option(s) with label 'Weekly, Lead time 24 hrs, Overdue after 24 hrs' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 19:59:28 - [TEST_STEP][PASSED] - click(findTestObject("LOT/click-Use a LOT")): Object: 'Object Repository/LOT/click-Use a LOT' is clicked on

2023-05-17 19:59:29 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/click-Use a LOT' is clicked on

2023-05-17 19:59:29 - [TEST_STEP][PASSED] - click(findTestObject("LOT/button_Add Data Field")): Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:59:29 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/button_Add Data Field' is clicked on

2023-05-17 19:59:29 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/input_Field Label_Number"), "T4-PH Value 1"): Text 'T4-PH Value 1' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:59:30 - [MESSAGE][PASSED] - Text 'T4-PH Value 1' is set on object 'Object Repository/LOT/input_Field Label_Number'

2023-05-17 19:59:30 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/select_Text_Number"), "4", true): All options with value '4' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:59:31 - [MESSAGE][PASSED] - All options with value '4' are selected in object 'Object Repository/LOT/select_Text_Number'  using regular expression

2023-05-17 19:59:31 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/VF_DV_Yes"), "Yes"): Text 'Yes' is set on object 'Object Repository/LOT/VF_DV_Yes'

2023-05-17 19:59:32 - [MESSAGE][PASSED] - Text 'Yes' is set on object 'Object Repository/LOT/VF_DV_Yes'

2023-05-17 19:59:32 - [TEST_STEP][PASSED] - click(findTestObject("LOT/Acceptable checkBox")): Object: 'Object Repository/LOT/Acceptable checkBox' is clicked on

2023-05-17 19:59:33 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/Acceptable checkBox' is clicked on

2023-05-17 19:59:33 - [TEST_STEP][PASSED] - click(findTestObject("LOT/click-AddMoreValidation")): Object: 'Object Repository/LOT/click-AddMoreValidation' is clicked on

2023-05-17 19:59:33 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/click-AddMoreValidation' is clicked on

2023-05-17 19:59:33 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/VF_DV_No"), "No"): Text 'No' is set on object 'Object Repository/LOT/VF_DV_No'

2023-05-17 19:59:34 - [MESSAGE][PASSED] - Text 'No' is set on object 'Object Repository/LOT/VF_DV_No'

2023-05-17 19:59:34 - [TEST_STEP][PASSED] - click(findTestObject("LOT/Lot-Save Task")): Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:59:35 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:59:35 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/span_Add Maintenance Task")): Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:59:35 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:59:35 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Maintenance Task"), findTestData("Lot Data").getValue("Lot-Task Name", 6)): Text 'Task - 6' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:59:36 - [MESSAGE][PASSED] - Text 'Task - 6' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:59:36 - [TEST_STEP][PASSED] - MTName_07 = getAttribute(findTestObject("Add Instrument/input_Maintenance Task"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 6'

2023-05-17 19:59:37 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Task - 6'

2023-05-17 19:59:37 - [TEST_STEP][PASSED] - println(MTName_07): null

2023-05-17 19:59:37 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Lot Data").getValue("Lot-Task Name", 6), MTName_07): Actual object 'Task - 6' and expected object 'Task - 6' are equal

2023-05-17 19:59:37 - [MESSAGE][PASSED] - Actual object 'Task - 6' and expected object 'Task - 6' are equal

2023-05-17 19:59:37 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/Fixed")): Object: 'Object Repository/Add Instrument/Fixed' is clicked on

2023-05-17 19:59:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/Fixed' is clicked on

2023-05-17 19:59:37 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/FixedFreq"), findTestData("Lot Data").getValue("Lot-Frequency", 6), true): All options with label '24 Hours' are selected in object 'Object Repository/Add Instrument/FixedFreq'  using regular expression

2023-05-17 19:59:38 - [MESSAGE][PASSED] - All options with label '24 Hours' are selected in object 'Object Repository/Add Instrument/FixedFreq'  using regular expression

2023-05-17 19:59:38 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/FixedFreq"), findTestData("Lot Data").getValue("Lot-Frequency", 6), false, 0): 1 option(s) with label '24 Hours' is/are present in object 'Object Repository/Add Instrument/FixedFreq' 

2023-05-17 19:59:39 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:59:40 - [MESSAGE][PASSED] - 1 option(s) with label '24 Hours' is/are present in object 'Object Repository/Add Instrument/FixedFreq' 

2023-05-17 19:59:40 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("LOT/Link-lotList"), findTestData("Lot Data").getValue("Lot Name", 1), false): All options with label 'Chemical Lot -1' are selected in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:59:40 - [MESSAGE][PASSED] - All options with label 'Chemical Lot -1' are selected in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:59:40 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("LOT/Link-lotList"), findTestData("Lot Data").getValue("Lot Name", 1), false, 0): 1 option(s) with label 'Chemical Lot -1' is/are present in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:59:40 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:59:41 - [MESSAGE][PASSED] - 1 option(s) with label 'Chemical Lot -1' is/are present in object 'Object Repository/LOT/Link-lotList' 

2023-05-17 19:59:41 - [TEST_STEP][PASSED] - click(findTestObject("LOT/Lot-Save Task")): Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:59:42 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/Lot-Save Task' is clicked on

2023-05-17 19:59:42 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/span_Add Maintenance Task")): Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:59:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:59:42 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Maintenance Task"), findTestData("Add Inst-Type Data").getValue("Task Name", 1)): Text 'Soldering Iron' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:59:43 - [MESSAGE][PASSED] - Text 'Soldering Iron' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:59:43 - [TEST_STEP][PASSED] - R3 = getAttribute(findTestObject("Add Instrument/input_Maintenance Task"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Soldering Iron'

2023-05-17 19:59:44 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Soldering Iron'

2023-05-17 19:59:44 - [TEST_STEP][PASSED] - println(R3): null

2023-05-17 19:59:44 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Add Inst-Type Data").getValue("Task Name", 1), R3): Actual object 'Soldering Iron' and expected object 'Soldering Iron' are equal

2023-05-17 19:59:44 - [MESSAGE][PASSED] - Actual object 'Soldering Iron' and expected object 'Soldering Iron' are equal

2023-05-17 19:59:44 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Add Inst-Type Data").getValue("Frequency", 1), true): All options with label 'Daily, Lead time 3 hrs, Overdue after 5 hrs' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 19:59:45 - [MESSAGE][PASSED] - All options with label 'Daily, Lead time 3 hrs, Overdue after 5 hrs' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 19:59:45 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Add Inst-Type Data").getValue("Frequency", 1), false, 0): 1 option(s) with label 'Daily, Lead time 3 hrs, Overdue after 5 hrs' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 19:59:45 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:59:46 - [MESSAGE][PASSED] - 1 option(s) with label 'Daily, Lead time 3 hrs, Overdue after 5 hrs' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 19:59:46 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Save Task")): Object: 'Object Repository/Add Instrument/button_Save Task' is clicked on

2023-05-17 19:59:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Save Task' is clicked on

2023-05-17 19:59:46 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/span_Add Maintenance Task")): Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:59:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 19:59:47 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Maintenance Task"), findTestData("Add Inst-Type Data").getValue("Task Name", 2)): Text 'Multimeter' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:59:48 - [MESSAGE][PASSED] - Text 'Multimeter' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 19:59:48 - [TEST_STEP][PASSED] - R4 = getAttribute(findTestObject("Add Instrument/input_Maintenance Task"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Multimeter'

2023-05-17 19:59:49 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Multimeter'

2023-05-17 19:59:49 - [TEST_STEP][PASSED] - println(R4): null

2023-05-17 19:59:49 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Add Inst-Type Data").getValue("Task Name", 2), R4): Actual object 'Multimeter' and expected object 'Multimeter' are equal

2023-05-17 19:59:49 - [MESSAGE][PASSED] - Actual object 'Multimeter' and expected object 'Multimeter' are equal

2023-05-17 19:59:49 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/Fixed")): Object: 'Object Repository/Add Instrument/Fixed' is clicked on

2023-05-17 19:59:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/Fixed' is clicked on

2023-05-17 19:59:49 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/FixedFreq"), findTestData("Add Inst-Type Data").getValue("Frequency", 2), true): All options with label '48 Hours' are selected in object 'Object Repository/Add Instrument/FixedFreq'  using regular expression

2023-05-17 19:59:51 - [MESSAGE][PASSED] - All options with label '48 Hours' are selected in object 'Object Repository/Add Instrument/FixedFreq'  using regular expression

2023-05-17 19:59:51 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Add Data Field")): Object: 'Object Repository/Add Instrument/button_Add Data Field' is clicked on

2023-05-17 19:59:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Add Data Field' is clicked on

2023-05-17 19:59:51 - [TEST_STEP][PASSED] - exe = driver: null

2023-05-17 19:59:51 - [TEST_STEP][PASSED] - elementToScroll1 = driver.findElement(By.xpath("//span[text()='Field Label']")): null

2023-05-17 19:59:52 - [TEST_STEP][PASSED] - exe.executeScript("arguments[0].scrollIntoView(true)", elementToScroll1): null

2023-05-17 19:59:52 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Field Label"), findTestData("Add Inst-Type Data").getValue("FieldLable", 2)): Text 'Temp' is set on object 'Object Repository/Add Instrument/input_Field Label'

2023-05-17 19:59:52 - [MESSAGE][PASSED] - Text 'Temp' is set on object 'Object Repository/Add Instrument/input_Field Label'

2023-05-17 19:59:52 - [TEST_STEP][PASSED] - R5 = getAttribute(findTestObject("Add Instrument/input_Field Label"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Field Label' is: 'Temp'

2023-05-17 19:59:53 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Field Label' is: 'Temp'

2023-05-17 19:59:53 - [TEST_STEP][PASSED] - println(R5): null

2023-05-17 19:59:53 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Add Inst-Type Data").getValue("FieldLable", 2), R5): Actual object 'Temp' and expected object 'Temp' are equal

2023-05-17 19:59:53 - [MESSAGE][PASSED] - Actual object 'Temp' and expected object 'Temp' are equal

2023-05-17 19:59:53 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/select_FieldType_Definedvalue"), findTestData("Add Inst-Type Data").getValue("FieldType", 2), true): All options with label 'Defined Value' are selected in object 'Object Repository/Add Instrument/select_FieldType_Definedvalue'  using regular expression

2023-05-17 19:59:54 - [MESSAGE][PASSED] - All options with label 'Defined Value' are selected in object 'Object Repository/Add Instrument/select_FieldType_Definedvalue'  using regular expression

2023-05-17 19:59:54 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/select_FieldType_Definedvalue"), findTestData("Add Inst-Type Data").getValue("FieldType", 2), false, 0): 1 option(s) with label 'Defined Value' is/are present in object 'Object Repository/Add Instrument/select_FieldType_Definedvalue' 

2023-05-17 19:59:54 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 19:59:55 - [MESSAGE][PASSED] - 1 option(s) with label 'Defined Value' is/are present in object 'Object Repository/Add Instrument/select_FieldType_Definedvalue' 

2023-05-17 19:59:55 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Validate Field_txtDefinedvalue"), findTestData("Add Inst-Type Data").getValue("ValidateField", 2)): Text '10' is set on object 'Object Repository/Add Instrument/input_Validate Field_txtDefinedvalue'

2023-05-17 19:59:56 - [MESSAGE][PASSED] - Text '10' is set on object 'Object Repository/Add Instrument/input_Validate Field_txtDefinedvalue'

2023-05-17 19:59:56 - [TEST_STEP][PASSED] - R6 = getAttribute(findTestObject("Add Instrument/input_Validate Field_txtDefinedvalue"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Validate Field_txtDefinedvalue' is: '10'

2023-05-17 19:59:56 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Validate Field_txtDefinedvalue' is: '10'

2023-05-17 19:59:56 - [TEST_STEP][PASSED] - println(R6): null

2023-05-17 19:59:56 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Add Inst-Type Data").getValue("ValidateField", 2), R6): Actual object '10' and expected object '10' are equal

2023-05-17 19:59:56 - [MESSAGE][PASSED] - Actual object '10' and expected object '10' are equal

2023-05-17 19:59:56 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Add More Validation")): Object: 'Object Repository/Add Instrument/button_Add More Validation' is clicked on

2023-05-17 19:59:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Add More Validation' is clicked on

2023-05-17 19:59:57 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_remove_txtDefinedvalue"), findTestData("Add Inst-Type Data").getValue("ValidateField", 3)): Text '11' is set on object 'Object Repository/Add Instrument/input_remove_txtDefinedvalue'

2023-05-17 19:59:58 - [MESSAGE][PASSED] - Text '11' is set on object 'Object Repository/Add Instrument/input_remove_txtDefinedvalue'

2023-05-17 19:59:58 - [TEST_STEP][PASSED] - R7 = getAttribute(findTestObject("Add Instrument/input_remove_txtDefinedvalue"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_remove_txtDefinedvalue' is: '11'

2023-05-17 19:59:58 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_remove_txtDefinedvalue' is: '11'

2023-05-17 19:59:58 - [TEST_STEP][PASSED] - println(R7): null

2023-05-17 19:59:58 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Add Inst-Type Data").getValue("ValidateField", 3), R7): Actual object '11' and expected object '11' are equal

2023-05-17 19:59:58 - [MESSAGE][PASSED] - Actual object '11' and expected object '11' are equal

2023-05-17 19:59:58 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/input_Acceptable_Checkbox")): Object: 'Object Repository/Add Instrument/input_Acceptable_Checkbox' is clicked on

2023-05-17 19:59:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/input_Acceptable_Checkbox' is clicked on

2023-05-17 19:59:59 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Save Task")): Object: 'Object Repository/Add Instrument/button_Save Task' is clicked on

2023-05-17 19:59:59 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Save Task' is clicked on

2023-05-17 19:59:59 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/span_Add Maintenance Task")): Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 20:00:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 20:00:00 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Maintenance Task"), findTestData("Add Inst-Type Data").getValue("Task Name", 4)): Text 'Function generator' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 20:00:01 - [MESSAGE][PASSED] - Text 'Function generator' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 20:00:01 - [TEST_STEP][PASSED] - R3 = getAttribute(findTestObject("Add Instrument/input_Maintenance Task"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Function generator'

2023-05-17 20:00:02 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Function generator'

2023-05-17 20:00:02 - [TEST_STEP][PASSED] - println(R3): null

2023-05-17 20:00:02 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Add Inst-Type Data").getValue("Task Name", 4), R3): Actual object 'Function generator' and expected object 'Function generator' are equal

2023-05-17 20:00:02 - [MESSAGE][PASSED] - Actual object 'Function generator' and expected object 'Function generator' are equal

2023-05-17 20:00:02 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Add Inst-Type Data").getValue("Frequency", 4), true): All options with label 'Every 12 Hours, Lead time 1 hr, Overdue after 5 hrs' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 20:00:03 - [MESSAGE][PASSED] - All options with label 'Every 12 Hours, Lead time 1 hr, Overdue after 5 hrs' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 20:00:03 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Add Inst-Type Data").getValue("Frequency", 4), false, 0): 1 option(s) with label 'Every 12 Hours, Lead time 1 hr, Overdue after 5 hrs' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 20:00:04 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:00:04 - [MESSAGE][PASSED] - 1 option(s) with label 'Every 12 Hours, Lead time 1 hr, Overdue after 5 hrs' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 20:00:04 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Save Task")): Object: 'Object Repository/Add Instrument/button_Save Task' is clicked on

2023-05-17 20:00:05 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Save Task' is clicked on

2023-05-17 20:00:05 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/span_Add Maintenance Task")): Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 20:00:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/span_Add Maintenance Task' is clicked on

2023-05-17 20:00:06 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Maintenance Task"), findTestData("Add Inst-Type Data").getValue("Task Name", 5)): Text 'Oscilloscope' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 20:00:07 - [MESSAGE][PASSED] - Text 'Oscilloscope' is set on object 'Object Repository/Add Instrument/input_Maintenance Task'

2023-05-17 20:00:07 - [TEST_STEP][PASSED] - R8 = getAttribute(findTestObject("Add Instrument/input_Maintenance Task"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Oscilloscope'

2023-05-17 20:00:07 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Maintenance Task' is: 'Oscilloscope'

2023-05-17 20:00:07 - [TEST_STEP][PASSED] - println(R8): null

2023-05-17 20:00:07 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Add Inst-Type Data").getValue("Task Name", 5), R8): Actual object 'Oscilloscope' and expected object 'Oscilloscope' are equal

2023-05-17 20:00:07 - [MESSAGE][PASSED] - Actual object 'Oscilloscope' and expected object 'Oscilloscope' are equal

2023-05-17 20:00:07 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Add Inst-Type Data").getValue("Frequency", 5), true): All options with label 'Unscheduled' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 20:00:09 - [MESSAGE][PASSED] - All options with label 'Unscheduled' are selected in object 'Object Repository/Add Instrument/FrequencyList'  using regular expression

2023-05-17 20:00:09 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/FrequencyList"), findTestData("Add Inst-Type Data").getValue("Frequency", 5), false, 0): 1 option(s) with label 'Unscheduled' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 20:00:09 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:00:10 - [MESSAGE][PASSED] - 1 option(s) with label 'Unscheduled' is/are present in object 'Object Repository/Add Instrument/FrequencyList' 

2023-05-17 20:00:10 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Add Data Field")): Object: 'Object Repository/Add Instrument/button_Add Data Field' is clicked on

2023-05-17 20:00:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Add Data Field' is clicked on

2023-05-17 20:00:10 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/chkrequired")): Object: 'Object Repository/Add Instrument/chkrequired' is clicked on

2023-05-17 20:00:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/chkrequired' is clicked on

2023-05-17 20:00:11 - [TEST_STEP][PASSED] - setText(findTestObject("Add Instrument/input_Field Label"), findTestData("Add Inst-Type Data").getValue("FieldLable", 5)): Text 'File' is set on object 'Object Repository/Add Instrument/input_Field Label'

2023-05-17 20:00:12 - [MESSAGE][PASSED] - Text 'File' is set on object 'Object Repository/Add Instrument/input_Field Label'

2023-05-17 20:00:12 - [TEST_STEP][PASSED] - R9 = getAttribute(findTestObject("Add Instrument/input_Field Label"), "value"): Attribute 'value' of object 'Object Repository/Add Instrument/input_Field Label' is: 'File'

2023-05-17 20:00:12 - [MESSAGE][PASSED] - Attribute 'value' of object 'Object Repository/Add Instrument/input_Field Label' is: 'File'

2023-05-17 20:00:12 - [TEST_STEP][PASSED] - println(R9): null

2023-05-17 20:00:12 - [TEST_STEP][PASSED] - verifyEqual(findTestData("Add Inst-Type Data").getValue("FieldLable", 5), R9): Actual object 'File' and expected object 'File' are equal

2023-05-17 20:00:12 - [MESSAGE][PASSED] - Actual object 'File' and expected object 'File' are equal

2023-05-17 20:00:12 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Instrument/select_FieldType_Definedvalue"), findTestData("Add Inst-Type Data").getValue("FieldType", 5), true): All options with label 'File Attachment' are selected in object 'Object Repository/Add Instrument/select_FieldType_Definedvalue'  using regular expression

2023-05-17 20:00:13 - [MESSAGE][PASSED] - All options with label 'File Attachment' are selected in object 'Object Repository/Add Instrument/select_FieldType_Definedvalue'  using regular expression

2023-05-17 20:00:13 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Instrument/select_FieldType_Definedvalue"), findTestData("Add Inst-Type Data").getValue("FieldType", 5), false, 0): 1 option(s) with label 'File Attachment' is/are present in object 'Object Repository/Add Instrument/select_FieldType_Definedvalue' 

2023-05-17 20:00:13 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:00:14 - [MESSAGE][PASSED] - 1 option(s) with label 'File Attachment' is/are present in object 'Object Repository/Add Instrument/select_FieldType_Definedvalue' 

2023-05-17 20:00:14 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Save Task")): Object: 'Object Repository/Add Instrument/button_Save Task' is clicked on

2023-05-17 20:00:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Save Task' is clicked on

2023-05-17 20:00:15 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Finish")): Object: 'Object Repository/Add Instrument/button_Finish' is clicked on

2023-05-17 20:00:15 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Finish' is clicked on

2023-05-17 20:00:15 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Yes")): Object: 'Object Repository/Add Instrument/button_Yes' is clicked on

2023-05-17 20:00:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Yes' is clicked on

2023-05-17 20:00:16 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Add Instrument/scrollToTop"), 0): Scroll to object 'Object Repository/Add Instrument/scrollToTop' successfully

2023-05-17 20:00:16 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:00:20 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Add Instrument/scrollToTop' successfully

2023-05-17 20:00:20 - [TEST_STEP][PASSED] - setText(findTestObject("Add Inst-Type/input_SearchString"), findTestData("Add Inst-Type Data").getValue("Created-InsType_Name", 1)): Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Add Inst-Type/input_SearchString'

2023-05-17 20:00:21 - [MESSAGE][PASSED] - Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Add Inst-Type/input_SearchString'

2023-05-17 20:00:21 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2023-05-17 20:00:23 - [MESSAGE][PASSED] - Delayed 2 second(s)

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - createdInstType = findTestData("Add Inst-Type Data").getValue("Created-InsType_Name", 1): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - InstType = driver.findElements(By.xpath("//div[@class='col']//span")): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - for ([i = 0, i < InstType.size(), (i++)]): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - x1 = InstType.get(i): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - x2 = x1.getText(): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - println(x2): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - if (createdInstType.equals(x2)): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - x1.click(): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - x1 = InstType.get(i): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - x2 = x1.getText(): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - println(x2): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - if (createdInstType.equals(x2)): null

2023-05-17 20:00:23 - [TEST_STEP][PASSED] - click(findTestObject("Add Inst-Type/button_Add Instrument")): Object: 'Object Repository/Add Inst-Type/button_Add Instrument' is clicked on

2023-05-17 20:00:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Inst-Type/button_Add Instrument' is clicked on

2023-05-17 20:00:24 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Inst-Type/Select_Site"), findTestData("Dept_Unit Data").getValue("Site", 1), true): All options with label 'Madurai - 2023/17/05 19:55:21' are selected in object 'Object Repository/Add Inst-Type/Select_Site'  using regular expression

2023-05-17 20:00:31 - [MESSAGE][PASSED] - All options with label 'Madurai - 2023/17/05 19:55:21' are selected in object 'Object Repository/Add Inst-Type/Select_Site'  using regular expression

2023-05-17 20:00:31 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Inst-Type/Select_Site"), findTestData("Dept_Unit Data").getValue("Site", 1), true, 0): 1 option(s) with label 'Madurai - 2023/17/05 19:55:21' is/are present in object 'Object Repository/Add Inst-Type/Select_Site'  using regular expression

2023-05-17 20:00:31 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:00:35 - [MESSAGE][PASSED] - 1 option(s) with label 'Madurai - 2023/17/05 19:55:21' is/are present in object 'Object Repository/Add Inst-Type/Select_Site'  using regular expression

2023-05-17 20:00:35 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Inst-Type/select Department Core Lab"), findTestData("Dept_Unit Data").getValue("Created-Dept Name", 1), true): All options with label 'Sample - 2023/17/05 19:56:26' are selected in object 'Object Repository/Add Inst-Type/select Department Core Lab'  using regular expression

2023-05-17 20:00:36 - [MESSAGE][PASSED] - All options with label 'Sample - 2023/17/05 19:56:26' are selected in object 'Object Repository/Add Inst-Type/select Department Core Lab'  using regular expression

2023-05-17 20:00:36 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Inst-Type/select Department Core Lab"), findTestData("Dept_Unit Data").getValue("Created-Dept Name", 1), true, 0): 1 option(s) with label 'Sample - 2023/17/05 19:56:26' is/are present in object 'Object Repository/Add Inst-Type/select Department Core Lab'  using regular expression

2023-05-17 20:00:36 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:00:37 - [MESSAGE][PASSED] - 1 option(s) with label 'Sample - 2023/17/05 19:56:26' is/are present in object 'Object Repository/Add Inst-Type/select Department Core Lab'  using regular expression

2023-05-17 20:00:37 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("Add Inst-Type/select_UnitCore Lab"), findTestData("Dept_Unit Data").getValue("Bench / Unit Name", 1), true): All options with label 'Test01' are selected in object 'Object Repository/Add Inst-Type/select_UnitCore Lab'  using regular expression

2023-05-17 20:00:38 - [MESSAGE][PASSED] - All options with label 'Test01' are selected in object 'Object Repository/Add Inst-Type/select_UnitCore Lab'  using regular expression

2023-05-17 20:00:38 - [TEST_STEP][PASSED] - verifyOptionPresentByLabel(findTestObject("Add Inst-Type/select_UnitCore Lab"), findTestData("Dept_Unit Data").getValue("Bench / Unit Name", 1), true, 0): 1 option(s) with label 'Test01' is/are present in object 'Object Repository/Add Inst-Type/select_UnitCore Lab'  using regular expression

2023-05-17 20:00:39 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:00:40 - [MESSAGE][PASSED] - 1 option(s) with label 'Test01' is/are present in object 'Object Repository/Add Inst-Type/select_UnitCore Lab'  using regular expression

2023-05-17 20:00:40 - [TEST_STEP][PASSED] - setText(findTestObject("Add Inst-Type/input_Instrument Label"), findTestData("Add Inst-Type Data").getValue("Created-InsType_Name", 1)): Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Add Inst-Type/input_Instrument Label'

2023-05-17 20:00:41 - [MESSAGE][PASSED] - Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Add Inst-Type/input_Instrument Label'

2023-05-17 20:00:41 - [TEST_STEP][PASSED] - setText(findTestObject("Add Inst-Type/instrumentSerialNumber"), findTestData("Add Inst-Type Data").getValue("Instrument Serial Number", 1)): Text '1234-RD57989' is set on object 'Object Repository/Add Inst-Type/instrumentSerialNumber'

2023-05-17 20:00:42 - [MESSAGE][PASSED] - Text '1234-RD57989' is set on object 'Object Repository/Add Inst-Type/instrumentSerialNumber'

2023-05-17 20:00:42 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Add Instrument/scrollToSystemscheduled"), 0): Scroll to object 'Object Repository/Add Instrument/scrollToSystemscheduled' successfully

2023-05-17 20:00:42 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:00:42 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Add Instrument/scrollToSystemscheduled' successfully

2023-05-17 20:00:42 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/input_fixedScheduled")): Object: 'Object Repository/Add Instrument/input_fixedScheduled' is clicked on

2023-05-17 20:00:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/input_fixedScheduled' is clicked on

2023-05-17 20:00:42 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/SA_ON")): Object: 'Object Repository/Add Instrument/SA_ON' is clicked on

2023-05-17 20:00:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/SA_ON' is clicked on

2023-05-17 20:00:43 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/SU_ON")): Object: 'Object Repository/Add Instrument/SU_ON' is clicked on

2023-05-17 20:00:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/SU_ON' is clicked on

2023-05-17 20:00:44 - [TEST_STEP][PASSED] - click(findTestObject("Add Instrument/button_Save Instrument")): Object: 'Object Repository/Add Instrument/button_Save Instrument' is clicked on

2023-05-17 20:00:44 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Instrument/button_Save Instrument' is clicked on

2023-05-17 20:00:44 - [TEST_STEP][PASSED] - click(findTestObject("Add Inst-Type/select_Logo")): Object: 'Object Repository/Add Inst-Type/select_Logo' is clicked on

2023-05-17 20:00:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Add Inst-Type/select_Logo' is clicked on

2023-05-17 20:00:46 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2023-05-17 20:00:48 - [MESSAGE][PASSED] - Delayed 2 second(s)

2023-05-17 20:00:48 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:00:48 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333848553.png]]

2023-05-17 20:00:48 - [TEST_STEP][PASSED] - click(findTestObject("LOT/click_ControlandReagents")): Object: 'Object Repository/LOT/click_ControlandReagents' is clicked on

2023-05-17 20:00:49 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/click_ControlandReagents' is clicked on

2023-05-17 20:00:49 - [TEST_STEP][PASSED] - click(findTestObject("LOT/button-EditLot")): Object: 'Object Repository/LOT/button-EditLot' is clicked on

2023-05-17 20:00:50 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/button-EditLot' is clicked on

2023-05-17 20:00:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("LOT/Verify-LogNotes"), "Checking Lot Notes"): Actual text and expected text of test object 'Object Repository/LOT/Verify-LogNotes' are matched.

2023-05-17 20:00:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/LOT/Verify-LogNotes' are matched.

2023-05-17 20:00:51 - [TEST_STEP][PASSED] - click(findTestObject("LOT/btn_Add-New")): Object: 'Object Repository/LOT/btn_Add-New' is clicked on

2023-05-17 20:00:52 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/btn_Add-New' is clicked on

2023-05-17 20:00:52 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-LotNo"), "123RD5"): Text '123RD5' is set on object 'Object Repository/LOT/txtBox-LotNo'

2023-05-17 20:00:53 - [MESSAGE][PASSED] - Text '123RD5' is set on object 'Object Repository/LOT/txtBox-LotNo'

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - timeZone = findTestData("Add Inst-Type Data").getValue("Log -TimeZone", 1): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - dateTime = LocalDateTime.now(ZoneId.of(timeZone)): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - Days = dateTime.plusDays(10): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - DIU = dateTime.plusDays(9): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - pastDay = dateTime.minusDays(3): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - dtf = DateTimeFormatter.ofPattern("MM/dd/yyyy"): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - expDate = Days.format(dtf): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - println(expDate): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - DateOpened = dtf.format(dateTime): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - println(DateOpened): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - DateReceived = pastDay.format(dtf): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - println(DateReceived): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - DateInUse = DIU.format(dtf): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - println(DateInUse): null

2023-05-17 20:00:53 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Expiration Date"), expDate): Text '05/27/2023' is set on object 'Object Repository/LOT/txtBox-Expiration Date'

2023-05-17 20:00:54 - [MESSAGE][PASSED] - Text '05/27/2023' is set on object 'Object Repository/LOT/txtBox-Expiration Date'

2023-05-17 20:00:54 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Opened Expiration"), expDate): Text '05/27/2023' is set on object 'Object Repository/LOT/txtBox-Opened Expiration'

2023-05-17 20:00:55 - [MESSAGE][PASSED] - Text '05/27/2023' is set on object 'Object Repository/LOT/txtBox-Opened Expiration'

2023-05-17 20:00:55 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Other Identifier"), "012345678910111213141516171819202122232425262728"): Text '012345678910111213141516171819202122232425262728' is set on object 'Object Repository/LOT/txtBox-Other Identifier'

2023-05-17 20:00:56 - [MESSAGE][PASSED] - Text '012345678910111213141516171819202122232425262728' is set on object 'Object Repository/LOT/txtBox-Other Identifier'

2023-05-17 20:00:56 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Manufacture"), "Lot-L1"): Text 'Lot-L1' is set on object 'Object Repository/LOT/txtBox-Manufacture'

2023-05-17 20:00:57 - [MESSAGE][PASSED] - Text 'Lot-L1' is set on object 'Object Repository/LOT/txtBox-Manufacture'

2023-05-17 20:00:57 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Description"), "Checking Text"): Text 'Checking Text' is set on object 'Object Repository/LOT/txtBox-Description'

2023-05-17 20:00:58 - [MESSAGE][PASSED] - Text 'Checking Text' is set on object 'Object Repository/LOT/txtBox-Description'

2023-05-17 20:00:58 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Date Received"), DateReceived): Text '05/14/2023' is set on object 'Object Repository/LOT/txtBox-Date Received'

2023-05-17 20:00:59 - [MESSAGE][PASSED] - Text '05/14/2023' is set on object 'Object Repository/LOT/txtBox-Date Received'

2023-05-17 20:00:59 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Date Opened"), DateOpened): Text '05/17/2023' is set on object 'Object Repository/LOT/txtBox-Date Opened'

2023-05-17 20:01:00 - [MESSAGE][PASSED] - Text '05/17/2023' is set on object 'Object Repository/LOT/txtBox-Date Opened'

2023-05-17 20:01:00 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Date In Use"), DateOpened): Text '05/17/2023' is set on object 'Object Repository/LOT/txtBox-Date In Use'

2023-05-17 20:01:01 - [MESSAGE][PASSED] - Text '05/17/2023' is set on object 'Object Repository/LOT/txtBox-Date In Use'

2023-05-17 20:01:01 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-DateDiscarded"), DateInUse): Text '05/26/2023' is set on object 'Object Repository/LOT/txtBox-DateDiscarded'

2023-05-17 20:01:02 - [MESSAGE][PASSED] - Text '05/26/2023' is set on object 'Object Repository/LOT/txtBox-DateDiscarded'

2023-05-17 20:01:02 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Product"), "ELL"): Text 'ELL' is set on object 'Object Repository/LOT/txtBox-Product'

2023-05-17 20:01:02 - [MESSAGE][PASSED] - Text 'ELL' is set on object 'Object Repository/LOT/txtBox-Product'

2023-05-17 20:01:02 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/Condition-Equals"), "4", true): All options with value '4' are selected in object 'Object Repository/LOT/Condition-Equals'  using regular expression

2023-05-17 20:01:04 - [MESSAGE][PASSED] - All options with value '4' are selected in object 'Object Repository/LOT/Condition-Equals'  using regular expression

2023-05-17 20:01:04 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Condition-Equals"), "22"): Text '22' is set on object 'Object Repository/LOT/txtBox-Condition-Equals'

2023-05-17 20:01:04 - [MESSAGE][PASSED] - Text '22' is set on object 'Object Repository/LOT/txtBox-Condition-Equals'

2023-05-17 20:01:04 - [TEST_STEP][PASSED] - click(findTestObject("LOT/checkBox-Acceptable")): Object: 'Object Repository/LOT/checkBox-Acceptable' is clicked on

2023-05-17 20:01:05 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/checkBox-Acceptable' is clicked on

2023-05-17 20:01:05 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/Condition-Between"), "3", true): All options with value '3' are selected in object 'Object Repository/LOT/Condition-Between'  using regular expression

2023-05-17 20:01:06 - [MESSAGE][PASSED] - All options with value '3' are selected in object 'Object Repository/LOT/Condition-Between'  using regular expression

2023-05-17 20:01:06 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Condition-Between"), "10"): Text '10' is set on object 'Object Repository/LOT/txtBox-Condition-Between'

2023-05-17 20:01:07 - [MESSAGE][PASSED] - Text '10' is set on object 'Object Repository/LOT/txtBox-Condition-Between'

2023-05-17 20:01:07 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtBox-Condition-Between 2"), "20"): Text '20' is set on object 'Object Repository/LOT/txtBox-Condition-Between 2'

2023-05-17 20:01:08 - [MESSAGE][PASSED] - Text '20' is set on object 'Object Repository/LOT/txtBox-Condition-Between 2'

2023-05-17 20:01:08 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/Condition-Greater Than or Equal"), "6", true): All options with value '6' are selected in object 'Object Repository/LOT/Condition-Greater Than or Equal'  using regular expression

2023-05-17 20:01:09 - [MESSAGE][PASSED] - All options with value '6' are selected in object 'Object Repository/LOT/Condition-Greater Than or Equal'  using regular expression

2023-05-17 20:01:09 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtbox-greaterThan or Equal"), "10"): Text '10' is set on object 'Object Repository/LOT/txtbox-greaterThan or Equal'

2023-05-17 20:01:10 - [MESSAGE][PASSED] - Text '10' is set on object 'Object Repository/LOT/txtbox-greaterThan or Equal'

2023-05-17 20:01:10 - [TEST_STEP][PASSED] - click(findTestObject("LOT/btn-Add More Validation (control-Reagent)")): Object: 'Object Repository/LOT/btn-Add More Validation (control-Reagent)' is clicked on

2023-05-17 20:01:10 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/btn-Add More Validation (control-Reagent)' is clicked on

2023-05-17 20:01:10 - [TEST_STEP][PASSED] - selectOptionByLabel(findTestObject("LOT/condition-OR"), "OR", false): All options with label 'OR' are selected in object 'Object Repository/LOT/condition-OR' 

2023-05-17 20:01:11 - [MESSAGE][PASSED] - All options with label 'OR' are selected in object 'Object Repository/LOT/condition-OR' 

2023-05-17 20:01:11 - [TEST_STEP][PASSED] - selectOptionByValue(findTestObject("LOT/Condition-Less Than or Equal"), "7", true): All options with value '7' are selected in object 'Object Repository/LOT/Condition-Less Than or Equal'  using regular expression

2023-05-17 20:01:13 - [MESSAGE][PASSED] - All options with value '7' are selected in object 'Object Repository/LOT/Condition-Less Than or Equal'  using regular expression

2023-05-17 20:01:13 - [TEST_STEP][PASSED] - setText(findTestObject("LOT/txtbox-lessThan or Equal"), "20"): Text '20' is set on object 'Object Repository/LOT/txtbox-lessThan or Equal'

2023-05-17 20:01:13 - [MESSAGE][PASSED] - Text '20' is set on object 'Object Repository/LOT/txtbox-lessThan or Equal'

2023-05-17 20:01:13 - [TEST_STEP][PASSED] - click(findTestObject("LOT/btn-Save_Edit-control-Reagent")): Object: 'Object Repository/LOT/btn-Save_Edit-control-Reagent' is clicked on

2023-05-17 20:01:14 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/btn-Save_Edit-control-Reagent' is clicked on

2023-05-17 20:01:14 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:01:16 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333876306.png]]

2023-05-17 20:01:16 - [TEST_STEP][PASSED] - click(findTestObject("LOT/span_")): Object: 'Object Repository/LOT/span_' is clicked on

2023-05-17 20:01:17 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/span_' is clicked on

2023-05-17 20:01:17 - [TEST_STEP][PASSED] - click(findTestObject("LOT/button_Cancel")): Object: 'Object Repository/LOT/button_Cancel' is clicked on

2023-05-17 20:01:17 - [MESSAGE][PASSED] - Object: 'Object Repository/LOT/button_Cancel' is clicked on]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Log Task - Suite" time="77.438" classname="Test Cases/Log Task - Suite" status="PASSED">
         <system-out><![CDATA[2023-05-17 20:01:17 - [TEST_CASE][PASSED] - Test Cases/Log Task - Suite: Test Cases/Log Task - Suite

2023-05-17 20:01:19 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2023-05-17 20:01:19 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-Ready_Status/click_View Instrument")): Object: 'Object Repository/LogTask-Ready_Status/click_View Instrument' is clicked on

2023-05-17 20:01:19 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-Ready_Status/click_View Instrument' is clicked on

2023-05-17 20:01:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2023-05-17 20:01:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2023-05-17 20:01:21 - [TEST_STEP][PASSED] - Task1 = findTestData("Add Inst-Type Data").getValue("Task Name", 1): null

2023-05-17 20:01:21 - [TEST_STEP][PASSED] - println(Task1): null

2023-05-17 20:01:21 - [TEST_STEP][PASSED] - T1 = driver.findElements(By.xpath("//div[@class='col']//span")): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - for ([i = 0, i < T1.size(), (i++)]): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1 = T1.get(i): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y2 = y1.getText(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - println(y2): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - if (y2.equals(Task1)): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - y1.click(): null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:01:23 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LogTask-Ready_Status/span_Fixedfrequency(Verification)"), 2): Scroll to object 'Object Repository/LogTask-Ready_Status/span_Fixedfrequency(Verification)' successfully

2023-05-17 20:01:24 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LogTask-Ready_Status/span_Fixedfrequency(Verification)' successfully

2023-05-17 20:01:24 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-Ready_Status/textarea_T1"), "Checking"): Text 'Checking' is set on object 'Object Repository/LogTask-Ready_Status/textarea_T1'

2023-05-17 20:01:25 - [MESSAGE][PASSED] - Text 'Checking' is set on object 'Object Repository/LogTask-Ready_Status/textarea_T1'

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-Ready_Status/a_Edit")): Object: 'Object Repository/LogTask-Ready_Status/a_Edit' is clicked on

2023-05-17 20:01:25 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-Ready_Status/a_Edit' is clicked on

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - timeZone = findTestData("Add Inst-Type Data").getValue("Log -TimeZone", 1): null

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - Ready_ldt = LocalDateTime.now(ZoneId.of(timeZone)): null

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - Ready_minusHours = Ready_ldt.minusHours(22): null

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - println(Ready_minusHours): null

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - Ready_dtfHH = DateTimeFormatter.ofPattern("MM/dd/yyyy,HH"): null

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - Ready_formatedDateTimeHH = Ready_minusHours.format(Ready_dtfHH): null

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - DateTime = Ready_formatedDateTimeHH.split(","): null

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - readyDate = DateTime[0]: null

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - readyTimeHH = DateTime[1]: null

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - println(readyDate): null

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - println(readyTimeHH): null

2023-05-17 20:01:25 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-Ready_Status/input_Date"), readyDate): Text '05/16/2023' is set on object 'Object Repository/LogTask-Ready_Status/input_Date'

2023-05-17 20:01:27 - [MESSAGE][PASSED] - Text '05/16/2023' is set on object 'Object Repository/LogTask-Ready_Status/input_Date'

2023-05-17 20:01:27 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-Ready_Status/input__HH"), readyTimeHH): Text '11' is set on object 'Object Repository/LogTask-Ready_Status/input__HH'

2023-05-17 20:01:28 - [MESSAGE][PASSED] - Text '11' is set on object 'Object Repository/LogTask-Ready_Status/input__HH'

2023-05-17 20:01:28 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-Ready_Status/textarea_ReasonTxtBox"), "Ready Status Log-checking"): Text 'Ready Status Log-checking' is set on object 'Object Repository/LogTask-Ready_Status/textarea_ReasonTxtBox'

2023-05-17 20:01:29 - [MESSAGE][PASSED] - Text 'Ready Status Log-checking' is set on object 'Object Repository/LogTask-Ready_Status/textarea_ReasonTxtBox'

2023-05-17 20:01:29 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-Ready_Status/button_Mark as Complete")): Object: 'Object Repository/LogTask-Ready_Status/button_Mark as Complete' is clicked on

2023-05-17 20:01:29 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-Ready_Status/button_Mark as Complete' is clicked on

2023-05-17 20:01:29 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("LogTask-Ready_Status/verify_Ready status"), "Ready"): Actual text and expected text of test object 'Object Repository/LogTask-Ready_Status/verify_Ready status' are matched.

2023-05-17 20:01:31 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/LogTask-Ready_Status/verify_Ready status' are matched.

2023-05-17 20:01:31 - [TEST_STEP][PASSED] - click(findTestObject("ELL Menu/Select_MenuIcon")): Object: 'Object Repository/ELL Menu/Select_MenuIcon' is clicked on

2023-05-17 20:01:32 - [MESSAGE][PASSED] - Object: 'Object Repository/ELL Menu/Select_MenuIcon' is clicked on

2023-05-17 20:01:32 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-Ready_Status/click_logInstrumentMenu")): Object: 'Object Repository/LogTask-Ready_Status/click_logInstrumentMenu' is clicked on

2023-05-17 20:01:33 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-Ready_Status/click_logInstrumentMenu' is clicked on

2023-05-17 20:01:33 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-Ready_Status/span_searchInstTextBox"), findTestData("Add Inst-Type Data").getValue("Created-InsType_Name", 1)): Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/LogTask-Ready_Status/span_searchInstTextBox'

2023-05-17 20:01:36 - [MESSAGE][PASSED] - Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/LogTask-Ready_Status/span_searchInstTextBox'

2023-05-17 20:01:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("LogTask-Ready_Status/verifyReadySt_inInstrument"), "Ready"): Actual text and expected text of test object 'Object Repository/LogTask-Ready_Status/verifyReadySt_inInstrument' are matched.

2023-05-17 20:01:38 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/LogTask-Ready_Status/verifyReadySt_inInstrument' are matched.

2023-05-17 20:01:38 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LogTask-Ready_Status/verify_InstrumentLabel"), 2): Scroll to object 'Object Repository/LogTask-Ready_Status/verify_InstrumentLabel' successfully

2023-05-17 20:01:38 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LogTask-Ready_Status/verify_InstrumentLabel' successfully

2023-05-17 20:01:38 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("LogTask-Ready_Status/verifyReadySt_inInstrument"), 1): Object 'Object Repository/LogTask-Ready_Status/verifyReadySt_inInstrument' is visible

2023-05-17 20:01:40 - [MESSAGE][PASSED] - Object 'Object Repository/LogTask-Ready_Status/verifyReadySt_inInstrument' is visible

2023-05-17 20:01:40 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:01:40 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333900395.png]]

2023-05-17 20:01:40 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-Ready_Status/verify_InstrumentLabel")): Object: 'Object Repository/LogTask-Ready_Status/verify_InstrumentLabel' is clicked on

2023-05-17 20:01:41 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-Ready_Status/verify_InstrumentLabel' is clicked on

2023-05-17 20:01:41 - [TEST_STEP][PASSED] - Task2 = findTestData("Add Inst-Type Data").getValue("Task Name", 2): null

2023-05-17 20:01:41 - [TEST_STEP][PASSED] - println(Task2): null

2023-05-17 20:01:41 - [TEST_STEP][PASSED] - T2 = driver.findElements(By.xpath("//div[@class='col']//span")): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - for ([i = 0, i < T2.size(), (i++)]): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1 = T2.get(i): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z2 = z1.getText(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - println(z2): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - if (z2.equals(Task2)): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - z1.click(): null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:01:43 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LogTask-DueNow_Status/span_scroll-FixedSchedule"), 0): Scroll to object 'Object Repository/LogTask-DueNow_Status/span_scroll-FixedSchedule' successfully

2023-05-17 20:01:44 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:01:44 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LogTask-DueNow_Status/span_scroll-FixedSchedule' successfully

2023-05-17 20:01:44 - [TEST_STEP][PASSED] - ValidateField = findTestData("Add Inst-Type Data").getValue("ValidateField", 2): null

2023-05-17 20:01:44 - [TEST_STEP][PASSED] - println(ValidateField): null

2023-05-17 20:01:44 - [TEST_STEP][PASSED] - vf = driver.findElements(By.xpath("//div//label[@aria-pressed='false']")): null

2023-05-17 20:01:44 - [TEST_STEP][PASSED] - for ([i = 0, i < vf.size(), (i++)]): null

2023-05-17 20:01:44 - [TEST_STEP][PASSED] - el = vf.get(i): null

2023-05-17 20:01:44 - [TEST_STEP][PASSED] - s = el.getText(): null

2023-05-17 20:01:44 - [TEST_STEP][PASSED] - println(s): null

2023-05-17 20:01:44 - [TEST_STEP][PASSED] - if (ValidateField.equals(s)): null

2023-05-17 20:01:44 - [TEST_STEP][PASSED] - el.click(): null

2023-05-17 20:01:44 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:01:44 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-DueNow_Status/textarea_T2"), "Checking"): Text 'Checking' is set on object 'Object Repository/LogTask-DueNow_Status/textarea_T2'

2023-05-17 20:01:46 - [MESSAGE][PASSED] - Text 'Checking' is set on object 'Object Repository/LogTask-DueNow_Status/textarea_T2'

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-DueNow_Status/a_Edit")): Object: 'Object Repository/LogTask-DueNow_Status/a_Edit' is clicked on

2023-05-17 20:01:46 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-DueNow_Status/a_Edit' is clicked on

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - DueNow_ldt = LocalDateTime.now(ZoneId.of(timeZone)): null

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - DueNow_minusHours = DueNow_ldt.minusHours(49): null

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - println(DueNow_minusHours): null

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - DueNow_dtfHH = DateTimeFormatter.ofPattern("MM/dd/yyyy,HH"): null

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - formatedDateTimeHH = DueNow_minusHours.format(DueNow_dtfHH): null

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - dueNowDateTime = formatedDateTimeHH.split(","): null

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - dueNowDate = dueNowDateTime[0]: null

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - dueNowHH = dueNowDateTime[1]: null

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - println(dueNowDate): null

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - println(dueNowHH): null

2023-05-17 20:01:46 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-DueNow_Status/input_Date"), dueNowDate): Text '05/15/2023' is set on object 'Object Repository/LogTask-DueNow_Status/input_Date'

2023-05-17 20:01:47 - [MESSAGE][PASSED] - Text '05/15/2023' is set on object 'Object Repository/LogTask-DueNow_Status/input_Date'

2023-05-17 20:01:47 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-DueNow_Status/input__HH"), dueNowHH): Text '08' is set on object 'Object Repository/LogTask-DueNow_Status/input__HH'

2023-05-17 20:01:48 - [MESSAGE][PASSED] - Text '08' is set on object 'Object Repository/LogTask-DueNow_Status/input__HH'

2023-05-17 20:01:48 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-DueNow_Status/textarea_ReasonTxtBox"), "Due Now Status Log-checking"): Text 'Due Now Status Log-checking' is set on object 'Object Repository/LogTask-DueNow_Status/textarea_ReasonTxtBox'

2023-05-17 20:01:49 - [MESSAGE][PASSED] - Text 'Due Now Status Log-checking' is set on object 'Object Repository/LogTask-DueNow_Status/textarea_ReasonTxtBox'

2023-05-17 20:01:49 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-DueNow_Status/button_Mark as Complete")): Object: 'Object Repository/LogTask-DueNow_Status/button_Mark as Complete' is clicked on

2023-05-17 20:01:50 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-DueNow_Status/button_Mark as Complete' is clicked on

2023-05-17 20:01:50 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("LogTask-DueNow_Status/verify_DueNow status"), "Due Now"): Actual text and expected text of test object 'Object Repository/LogTask-DueNow_Status/verify_DueNow status' are matched.

2023-05-17 20:01:52 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/LogTask-DueNow_Status/verify_DueNow status' are matched.

2023-05-17 20:01:52 - [TEST_STEP][PASSED] - click(findTestObject("ELL Menu/Select_MenuIcon")): Object: 'Object Repository/ELL Menu/Select_MenuIcon' is clicked on

2023-05-17 20:01:53 - [MESSAGE][PASSED] - Object: 'Object Repository/ELL Menu/Select_MenuIcon' is clicked on

2023-05-17 20:01:53 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-DueNow_Status/click_logInstrumentMenu")): Object: 'Object Repository/LogTask-DueNow_Status/click_logInstrumentMenu' is clicked on

2023-05-17 20:01:53 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-DueNow_Status/click_logInstrumentMenu' is clicked on

2023-05-17 20:01:53 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-DueNow_Status/span_searchInstTextBox"), findTestData("Add Inst-Type Data").getValue("Created-InsType_Name", 1)): Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/LogTask-DueNow_Status/span_searchInstTextBox'

2023-05-17 20:01:57 - [MESSAGE][PASSED] - Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/LogTask-DueNow_Status/span_searchInstTextBox'

2023-05-17 20:01:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("LogTask-DueNow_Status/verifyDueNowSt_Instrument"), "Due Now"): Actual text and expected text of test object 'Object Repository/LogTask-DueNow_Status/verifyDueNowSt_Instrument' are matched.

2023-05-17 20:01:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/LogTask-DueNow_Status/verifyDueNowSt_Instrument' are matched.

2023-05-17 20:01:59 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LogTask-DueNow_Status/verify_InstrumentLabel"), 2): Scroll to object 'Object Repository/LogTask-DueNow_Status/verify_InstrumentLabel' successfully

2023-05-17 20:01:59 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LogTask-DueNow_Status/verify_InstrumentLabel' successfully

2023-05-17 20:01:59 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("LogTask-DueNow_Status/verifyDueNowSt_Instrument"), 1): Object 'Object Repository/LogTask-DueNow_Status/verifyDueNowSt_Instrument' is visible

2023-05-17 20:02:00 - [MESSAGE][PASSED] - Object 'Object Repository/LogTask-DueNow_Status/verifyDueNowSt_Instrument' is visible

2023-05-17 20:02:00 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:02:01 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333921115.png]]

2023-05-17 20:02:01 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-DueNow_Status/verify_InstrumentLabel")): Object: 'Object Repository/LogTask-DueNow_Status/verify_InstrumentLabel' is clicked on

2023-05-17 20:02:01 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-DueNow_Status/verify_InstrumentLabel' is clicked on

2023-05-17 20:02:01 - [TEST_STEP][PASSED] - Task3 = findTestData("Add Inst-Type Data").getValue("Task Name", 4): null

2023-05-17 20:02:01 - [TEST_STEP][PASSED] - println(Task3): null

2023-05-17 20:02:01 - [TEST_STEP][PASSED] - T3 = driver.findElements(By.xpath("//div[@class='col']//span")): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - for ([i = 0, i < T3.size(), (i++)]): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1 = T3.get(i): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a2 = a1.getText(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - println(a2): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - if (a2.equals(Task3)): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - a1.click(): null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:02:04 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-OverDue_Status/textarea_T3"), "Checking"): Text 'Checking' is set on object 'Object Repository/LogTask-OverDue_Status/textarea_T3'

2023-05-17 20:02:05 - [MESSAGE][PASSED] - Text 'Checking' is set on object 'Object Repository/LogTask-OverDue_Status/textarea_T3'

2023-05-17 20:02:05 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-OverDue_Status/a_Edit")): Object: 'Object Repository/LogTask-OverDue_Status/a_Edit' is clicked on

2023-05-17 20:02:06 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-OverDue_Status/a_Edit' is clicked on

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - Overdue_ldt = LocalDateTime.now(ZoneId.of(timeZone)): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - currentDate = DateTimeFormatter.ofPattern("MM/dd/yyyy"): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - endDate = currentDate.format(Overdue_ldt): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - dateTimeFor = DateTimeFormatter.ofPattern("dd"): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - CD = dateTimeFor.format(Overdue_ldt): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - Overdue_minusHours = Overdue_ldt.minusHours(72): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - println(Overdue_minusHours): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - Overdue_dtfHH = DateTimeFormatter.ofPattern("MM/dd/yyyy,HH"): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - Overdue_formatedDateTimeHH = Overdue_minusHours.format(Overdue_dtfHH): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - Overdue_DateTime = Overdue_formatedDateTimeHH.split(","): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - OverdueDate = Overdue_DateTime[0]: null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - OverdueHH = Overdue_DateTime[1]: null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - println(OverdueDate): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - println(OverdueHH): null

2023-05-17 20:02:06 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-OverDue_Status/input_Date"), OverdueDate): Text '05/14/2023' is set on object 'Object Repository/LogTask-OverDue_Status/input_Date'

2023-05-17 20:02:07 - [MESSAGE][PASSED] - Text '05/14/2023' is set on object 'Object Repository/LogTask-OverDue_Status/input_Date'

2023-05-17 20:02:07 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-OverDue_Status/input__HH"), OverdueHH): Text '09' is set on object 'Object Repository/LogTask-OverDue_Status/input__HH'

2023-05-17 20:02:08 - [MESSAGE][PASSED] - Text '09' is set on object 'Object Repository/LogTask-OverDue_Status/input__HH'

2023-05-17 20:02:08 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-OverDue_Status/textarea_ReasonTxtBox"), "Over Due Status Log-checking"): Text 'Over Due Status Log-checking' is set on object 'Object Repository/LogTask-OverDue_Status/textarea_ReasonTxtBox'

2023-05-17 20:02:09 - [MESSAGE][PASSED] - Text 'Over Due Status Log-checking' is set on object 'Object Repository/LogTask-OverDue_Status/textarea_ReasonTxtBox'

2023-05-17 20:02:09 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-OverDue_Status/button_Mark as Complete")): Object: 'Object Repository/LogTask-OverDue_Status/button_Mark as Complete' is clicked on

2023-05-17 20:02:10 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-OverDue_Status/button_Mark as Complete' is clicked on

2023-05-17 20:02:10 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-OverDue_Status/div_Success-OK")): Object: 'Object Repository/LogTask-OverDue_Status/div_Success-OK' is clicked on

2023-05-17 20:02:12 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-OverDue_Status/div_Success-OK' is clicked on

2023-05-17 20:02:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("LogTask-OverDue_Status/verify_OverDue status"), "Overdue"): Actual text and expected text of test object 'Object Repository/LogTask-OverDue_Status/verify_OverDue status' are matched.

2023-05-17 20:02:13 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/LogTask-OverDue_Status/verify_OverDue status' are matched.

2023-05-17 20:02:13 - [TEST_STEP][PASSED] - click(findTestObject("ELL Menu/Select_MenuIcon")): Object: 'Object Repository/ELL Menu/Select_MenuIcon' is clicked on

2023-05-17 20:02:13 - [MESSAGE][PASSED] - Object: 'Object Repository/ELL Menu/Select_MenuIcon' is clicked on

2023-05-17 20:02:13 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-OverDue_Status/click_logInstrumentMenu")): Object: 'Object Repository/LogTask-OverDue_Status/click_logInstrumentMenu' is clicked on

2023-05-17 20:02:14 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-OverDue_Status/click_logInstrumentMenu' is clicked on

2023-05-17 20:02:14 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-OverDue_Status/span_searchInstTextBox"), findTestData("Add Inst-Type Data").getValue("Created-InsType_Name", 1)): Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/LogTask-OverDue_Status/span_searchInstTextBox'

2023-05-17 20:02:17 - [MESSAGE][PASSED] - Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/LogTask-OverDue_Status/span_searchInstTextBox'

2023-05-17 20:02:17 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("LogTask-OverDue_Status/verify-OverdueSt_Instrument"), "Overdue"): Actual text and expected text of test object 'Object Repository/LogTask-OverDue_Status/verify-OverdueSt_Instrument' are matched.

2023-05-17 20:02:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/LogTask-OverDue_Status/verify-OverdueSt_Instrument' are matched.

2023-05-17 20:02:18 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LogTask-OverDue_Status/verify_InstrumentLabel"), 0): Scroll to object 'Object Repository/LogTask-OverDue_Status/verify_InstrumentLabel' successfully

2023-05-17 20:02:18 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:02:18 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LogTask-OverDue_Status/verify_InstrumentLabel' successfully

2023-05-17 20:02:18 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("LogTask-OverDue_Status/verify_InstrumentLabel"), 1): Object 'Object Repository/LogTask-OverDue_Status/verify_InstrumentLabel' is visible

2023-05-17 20:02:18 - [MESSAGE][PASSED] - Object 'Object Repository/LogTask-OverDue_Status/verify_InstrumentLabel' is visible

2023-05-17 20:02:18 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:02:20 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333939828.png]]

2023-05-17 20:02:20 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-OverDue_Status/verify_InstrumentLabel")): Object: 'Object Repository/LogTask-OverDue_Status/verify_InstrumentLabel' is clicked on

2023-05-17 20:02:20 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-OverDue_Status/verify_InstrumentLabel' is clicked on

2023-05-17 20:02:20 - [TEST_STEP][PASSED] - Task4 = findTestData("Add Inst-Type Data").getValue("Task Name", 5): null

2023-05-17 20:02:20 - [TEST_STEP][PASSED] - println(Task4): null

2023-05-17 20:02:20 - [TEST_STEP][PASSED] - T4 = driver.findElements(By.xpath("//div[@class='col']//span")): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - for ([i = 0, i < T4.size(), (i++)]): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:22 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1 = T4.get(i): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b2 = b1.getText(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - println(b2): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - if (Task4.equals(b2)): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - b1.click(): null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:02:23 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LogTask-Status-A-Z/button_Attach a File"), 2): Scroll to object 'Object Repository/LogTask-Status-A-Z/button_Attach a File' successfully

2023-05-17 20:02:24 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LogTask-Status-A-Z/button_Attach a File' successfully

2023-05-17 20:02:24 - [TEST_STEP][PASSED] - filePath = findTestData("Add Inst-Type Data").getValue("Attached FilePath", 1): null

2023-05-17 20:02:24 - [TEST_STEP][PASSED] - println(filePath): null

2023-05-17 20:02:24 - [TEST_STEP][PASSED] - uploadFile(findTestObject("LogTask-Status-A-Z/button_Attach a File"), filePath): File 'C:\ELL\Automation\\File Upload\\Text.txt' sent to object: 'Object Repository/LogTask-Status-A-Z/button_Attach a File'

2023-05-17 20:02:24 - [MESSAGE][PASSED] - File 'C:\ELL\Automation\\File Upload\\Text.txt' sent to object: 'Object Repository/LogTask-Status-A-Z/button_Attach a File'

2023-05-17 20:02:24 - [TEST_STEP][PASSED] - setText(findTestObject("LogTask-OverDue_Status/textarea_T3"), "Checking"): Text 'Checking' is set on object 'Object Repository/LogTask-OverDue_Status/textarea_T3'

2023-05-17 20:02:26 - [MESSAGE][PASSED] - Text 'Checking' is set on object 'Object Repository/LogTask-OverDue_Status/textarea_T3'

2023-05-17 20:02:26 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-OverDue_Status/button_Mark as Complete")): Object: 'Object Repository/LogTask-OverDue_Status/button_Mark as Complete' is clicked on

2023-05-17 20:02:26 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-OverDue_Status/button_Mark as Complete' is clicked on

2023-05-17 20:02:26 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-Status-A-Z/click_HeaderTag")): Object: 'Object Repository/LogTask-Status-A-Z/click_HeaderTag' is clicked on

2023-05-17 20:02:28 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-Status-A-Z/click_HeaderTag' is clicked on

2023-05-17 20:02:28 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LOT/button-EditLot"), 0): Scroll to object 'Object Repository/LOT/button-EditLot' successfully

2023-05-17 20:02:28 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:02:29 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LOT/button-EditLot' successfully

2023-05-17 20:02:29 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:02:29 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333949479.png]]

2023-05-17 20:02:29 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LogTask-DueNow_Status/verify_DueNow status"), 0): Scroll to object 'Object Repository/LogTask-DueNow_Status/verify_DueNow status' successfully

2023-05-17 20:02:29 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:02:30 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LogTask-DueNow_Status/verify_DueNow status' successfully

2023-05-17 20:02:30 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:02:30 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333950493.png]]

2023-05-17 20:02:30 - [TEST_STEP][PASSED] - defaultStatus = driver.findElements(By.xpath("//div[@class='col']")): null

2023-05-17 20:02:30 - [TEST_STEP][PASSED] - l1 = new java.util.ArrayList(): null

2023-05-17 20:02:30 - [TEST_STEP][PASSED] - for ([j = 0, j < defaultStatus.size(), (j++)]): null

2023-05-17 20:02:30 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:30 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:30 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:30 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:30 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:30 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - element = defaultStatus.get(j): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - ds = element.getText(): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - l1.add(ds): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - println(l1): null

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("LOT/button-EditLot"), 0): Scroll to object 'Object Repository/LOT/button-EditLot' successfully

2023-05-17 20:02:31 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:02:31 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/LOT/button-EditLot' successfully

2023-05-17 20:02:31 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-Status-A-Z/span_Status")): Object: 'Object Repository/LogTask-Status-A-Z/span_Status' is clicked on

2023-05-17 20:02:32 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-Status-A-Z/span_Status' is clicked on

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - js = driver: null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - status = driver.findElements(By.xpath("//div[@class='col']")): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - l2 = new java.util.ArrayList(): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - for ([k = 0, k < status.size(), (k++)]): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:32 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - ele = status.get(k): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - st = ele.getText(): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - println(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - l2.add(st): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - println(l2): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - if (l1.containsAll(l2) && l2.containsAll(l1)): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - println("The list are Equal"): null

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:02:33 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333953377.png]]

2023-05-17 20:02:33 - [TEST_STEP][PASSED] - click(findTestObject("LogTask-Status-A-Z/A-Z")): Object: 'Object Repository/LogTask-Status-A-Z/A-Z' is clicked on

2023-05-17 20:02:34 - [MESSAGE][PASSED] - Object: 'Object Repository/LogTask-Status-A-Z/A-Z' is clicked on

2023-05-17 20:02:34 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:02:34 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333954756.png]]]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/Compliance status - Suite" time="96.475" classname="Test Cases/Compliance status - Suite" status="PASSED">
         <system-out><![CDATA[2023-05-17 20:02:34 - [TEST_CASE][PASSED] - Test Cases/Compliance status - Suite: Test Cases/Compliance status - Suite

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - driver = getWebDriver(): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - js = driver: null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - timeZone = findTestData("Add Inst-Type Data").getValue("Log -TimeZone", 1): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - ValidateField = findTestData("Add Inst-Type Data").getValue("ValidateField", 2): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - Overdue_ldt = LocalDateTime.now(ZoneId.of(timeZone)): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - currentDate = DateTimeFormatter.ofPattern("MM/dd/yyyy"): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - endDate = currentDate.format(Overdue_ldt): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - dateTimeFor = DateTimeFormatter.ofPattern("dd"): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - CD = dateTimeFor.format(Overdue_ldt): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - Overdue_minusHours = Overdue_ldt.minusHours(72): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - Overdue_dtfHH = DateTimeFormatter.ofPattern("MM/dd/yyyy,HH"): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - Overdue_formatedDateTimeHH = Overdue_minusHours.format(Overdue_dtfHH): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - Overdue_DateTime = Overdue_formatedDateTimeHH.split(","): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - OverdueDate = Overdue_DateTime[0]: null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - scrollTopReport = driver.findElement(By.xpath("//a//span[text()='Reports']")): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].scrollIntoView(false)", scrollTopReport): null

2023-05-17 20:02:36 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_Reports")): Object: 'Object Repository/Compliance status/click_Reports' is clicked on

2023-05-17 20:02:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_Reports' is clicked on

2023-05-17 20:02:37 - [TEST_STEP][PASSED] - setText(findTestObject("Compliance status/fromDate"), OverdueDate): Text '05/14/2023' is set on object 'Object Repository/Compliance status/fromDate'

2023-05-17 20:02:40 - [MESSAGE][PASSED] - Text '05/14/2023' is set on object 'Object Repository/Compliance status/fromDate'

2023-05-17 20:02:40 - [TEST_STEP][PASSED] - setText(findTestObject("Compliance status/toDate"), endDate): Text '05/17/2023' is set on object 'Object Repository/Compliance status/toDate'

2023-05-17 20:02:41 - [MESSAGE][PASSED] - Text '05/17/2023' is set on object 'Object Repository/Compliance status/toDate'

2023-05-17 20:02:41 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_Apply")): Object: 'Object Repository/Compliance status/click_Apply' is clicked on

2023-05-17 20:02:42 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_Apply' is clicked on

2023-05-17 20:02:42 - [TEST_STEP][PASSED] - num = Integer.parseInt(CD): null

2023-05-17 20:02:42 - [TEST_STEP][PASSED] - println(num): null

2023-05-17 20:02:42 - [TEST_STEP][PASSED] - now = LocalTime.now(ZoneId.of(timeZone)): null

2023-05-17 20:02:42 - [TEST_STEP][PASSED] - if (num == 3 && now.isAfter(LocalTime.parse("12:00")) && now.isBefore(LocalTime.parse("23:59"))): null

2023-05-17 20:02:42 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Compliance status/scrollDown"), 0): Scroll to object 'Object Repository/Compliance status/scrollDown' successfully

2023-05-17 20:02:42 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:02:43 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Compliance status/scrollDown' successfully

2023-05-17 20:02:43 - [TEST_STEP][PASSED] - lo = driver.findElements(By.xpath("//div[@title='Non-Compliance Not Yet Reviewed']")): null

2023-05-17 20:02:44 - [TEST_STEP][PASSED] - for ([i = 0, i < lo.size(), (i++)]): null

2023-05-17 20:02:44 - [TEST_STEP][PASSED] - elem = lo.get(i): null

2023-05-17 20:02:44 - [TEST_STEP][PASSED] - elem.click(): null

2023-05-17 20:02:44 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:02:44 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_Overdue")): Object: 'Object Repository/Compliance status/click_Overdue' is clicked on

2023-05-17 20:02:45 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_Overdue' is clicked on

2023-05-17 20:02:45 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_Resolve")): Object: 'Object Repository/Compliance status/click_Resolve' is clicked on

2023-05-17 20:02:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_Resolve' is clicked on

2023-05-17 20:02:46 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:02:47 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333967549.png]]

2023-05-17 20:02:47 - [TEST_STEP][PASSED] - l = driver.findElements(By.xpath("//div[@aria-expanded='true']//label[contains(@class,'white')]")): null

2023-05-17 20:02:48 - [TEST_STEP][PASSED] - for ([i = 0, i < l.size(), (i++)]): null

2023-05-17 20:02:48 - [TEST_STEP][PASSED] - setText(findTestObject("Compliance status/setTextForReason-Resolve"), "Checking Resolve Status"): Text 'Checking Resolve Status' is set on object 'Object Repository/Compliance status/setTextForReason-Resolve'

2023-05-17 20:02:48 - [MESSAGE][PASSED] - Text 'Checking Resolve Status' is set on object 'Object Repository/Compliance status/setTextForReason-Resolve'

2023-05-17 20:02:48 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/btn_MarkasComplete")): Object: 'Object Repository/Compliance status/btn_MarkasComplete' is clicked on

2023-05-17 20:02:49 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/btn_MarkasComplete' is clicked on

2023-05-17 20:02:49 - [TEST_STEP][PASSED] - click(findTestObject("ELL Menu/Select_MenuIcon")): Object: 'Object Repository/ELL Menu/Select_MenuIcon' is clicked on

2023-05-17 20:02:51 - [MESSAGE][PASSED] - Object: 'Object Repository/ELL Menu/Select_MenuIcon' is clicked on

2023-05-17 20:02:51 - [TEST_STEP][PASSED] - click(findTestObject("ELL Menu/a_Dashboard")): Object: 'Object Repository/ELL Menu/a_Dashboard' is clicked on

2023-05-17 20:02:52 - [MESSAGE][PASSED] - Object: 'Object Repository/ELL Menu/a_Dashboard' is clicked on

2023-05-17 20:02:52 - [TEST_STEP][PASSED] - setText(findTestObject("Compliance status/input_SearchString"), findTestData("Add Inst-Type Data").getValue("Created-InsType_Name", 1)): Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Compliance status/input_SearchString'

2023-05-17 20:03:01 - [MESSAGE][PASSED] - Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Compliance status/input_SearchString'

2023-05-17 20:03:01 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2023-05-17 20:03:03 - [MESSAGE][PASSED] - Delayed 2 second(s)

2023-05-17 20:03:03 - [TEST_STEP][PASSED] - Actual = getText(findTestObject("Compliance status/verifi_ExpvsAct")): Text of object 'Object Repository/Compliance status/verifi_ExpvsAct' is: 'Test1.1 - 2023/17/05 19:57:56'

2023-05-17 20:03:05 - [MESSAGE][PASSED] - Text of object 'Object Repository/Compliance status/verifi_ExpvsAct' is: 'Test1.1 - 2023/17/05 19:57:56'

2023-05-17 20:03:05 - [TEST_STEP][PASSED] - println(Actual): null

2023-05-17 20:03:05 - [TEST_STEP][PASSED] - expected = findTestData("Add Inst-Type Data").getValue("Created-InsType_Name", 1): null

2023-05-17 20:03:05 - [TEST_STEP][PASSED] - println(expected): null

2023-05-17 20:03:05 - [TEST_STEP][PASSED] - verifyEqual(Actual, expected): Actual object 'Test1.1 - 2023/17/05 19:57:56' and expected object 'Test1.1 - 2023/17/05 19:57:56' are equal

2023-05-17 20:03:05 - [MESSAGE][PASSED] - Actual object 'Test1.1 - 2023/17/05 19:57:56' and expected object 'Test1.1 - 2023/17/05 19:57:56' are equal

2023-05-17 20:03:05 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Compliance status/scrollToNonCompliance(1)"), 0): Scroll to object 'Object Repository/Compliance status/scrollToNonCompliance(1)' successfully

2023-05-17 20:03:05 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:03:06 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Compliance status/scrollToNonCompliance(1)' successfully

2023-05-17 20:03:06 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_NT")): Object: 'Object Repository/Compliance status/click_NT' is clicked on

2023-05-17 20:03:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_NT' is clicked on

2023-05-17 20:03:06 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Compliance status/scroll_viewInst"), 0): Scroll to object 'Object Repository/Compliance status/scroll_viewInst' successfully

2023-05-17 20:03:06 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:03:09 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Compliance status/scroll_viewInst' successfully

2023-05-17 20:03:09 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_shownCalender")): Object: 'Object Repository/Compliance status/click_shownCalender' is clicked on

2023-05-17 20:03:10 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_shownCalender' is clicked on

2023-05-17 20:03:10 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Compliance status/scrollToCalenderView"), 0): Scroll to object 'Object Repository/Compliance status/scrollToCalenderView' successfully

2023-05-17 20:03:10 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:03:11 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Compliance status/scrollToCalenderView' successfully

2023-05-17 20:03:11 - [TEST_STEP][PASSED] - if (num <= 2 || num <= 1): null

2023-05-17 20:03:11 - [TEST_STEP][PASSED] - else if (num >= 17): null

2023-05-17 20:03:11 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_cal")): Object: 'Object Repository/Compliance status/click_cal' is clicked on

2023-05-17 20:03:11 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_cal' is clicked on

2023-05-17 20:03:11 - [TEST_STEP][PASSED] - LogTaskstatus.horizontalScroll(): null

2023-05-17 20:03:11 - [TEST_STEP][PASSED] - println("The current date is equal or above 17"): null

2023-05-17 20:03:11 - [TEST_STEP][PASSED] - expStatus = "NT": null

2023-05-17 20:03:11 - [TEST_STEP][PASSED] - NT = driver.findElements(By.xpath("//span[@class='glyphicon glyphicon-remove text-danger ng-star-inserted'] |//span[@class='glyphicon glyphicon-remove bg-dark ng-star-inserted']")): null

2023-05-17 20:03:11 - [TEST_STEP][PASSED] - for ([k = 0, k < NT.size(), (k++)]): null

2023-05-17 20:03:11 - [TEST_STEP][PASSED] - noTesting = NT.get(k): null

2023-05-17 20:03:11 - [TEST_STEP][PASSED] - noTesting.click(): null

2023-05-17 20:03:12 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:03:12 - [TEST_STEP][PASSED] - NoTesting1 = driver.findElements(By.xpath("//span[contains(@class,'rounded-pill-button p-1')]")): null

2023-05-17 20:03:13 - [TEST_STEP][PASSED] - for ([i = 0, i < NoTesting1.size(), (i++)]): null

2023-05-17 20:03:13 - [TEST_STEP][PASSED] - noTTesting1 = NoTesting1.get(i): null

2023-05-17 20:03:13 - [TEST_STEP][PASSED] - s1 = noTTesting1.getText(): null

2023-05-17 20:03:13 - [TEST_STEP][PASSED] - if (expStatus.equals(s1)): null

2023-05-17 20:03:13 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:03:13 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333993592.png]]

2023-05-17 20:03:13 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:03:13 - [TEST_STEP][PASSED] - NoTesting2 = driver.findElements(By.xpath("//span[contains(@class,'rounded-pill-button p-1')]")): null

2023-05-17 20:03:14 - [TEST_STEP][PASSED] - for ([j = 0, j < NoTesting2.size(), (j++)]): null

2023-05-17 20:03:14 - [TEST_STEP][PASSED] - NoTTesting2 = NoTesting2.get(j): null

2023-05-17 20:03:14 - [TEST_STEP][PASSED] - s2 = NoTTesting2.getText(): null

2023-05-17 20:03:14 - [TEST_STEP][PASSED] - if (expStatus.equals(s2)): null

2023-05-17 20:03:14 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:03:14 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333994364.png]]

2023-05-17 20:03:14 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:03:14 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_cancel")): Object: 'Object Repository/Compliance status/click_cancel' is clicked on

2023-05-17 20:03:14 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_cancel' is clicked on

2023-05-17 20:03:14 - [TEST_STEP][PASSED] - lol = driver.findElements(By.xpath("//div[@title='Non-Compliance Not Yet Reviewed']")): null

2023-05-17 20:03:15 - [TEST_STEP][PASSED] - for ([i = 0, i < lol.size(), (i++)]): null

2023-05-17 20:03:15 - [TEST_STEP][PASSED] - elem = lol.get(i): null

2023-05-17 20:03:15 - [TEST_STEP][PASSED] - elem.click(): null

2023-05-17 20:03:15 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:03:15 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_overdue-Ignore")): Object: 'Object Repository/Compliance status/click_overdue-Ignore' is clicked on

2023-05-17 20:03:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_overdue-Ignore' is clicked on

2023-05-17 20:03:16 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_Ignore")): Object: 'Object Repository/Compliance status/click_Ignore' is clicked on

2023-05-17 20:03:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_Ignore' is clicked on

2023-05-17 20:03:17 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:03:17 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684333997685.png]]

2023-05-17 20:03:17 - [TEST_STEP][PASSED] - setText(findTestObject("Compliance status/setTextForReason-Ignore"), "Checking Ignore Status"): Text 'Checking Ignore Status' is set on object 'Object Repository/Compliance status/setTextForReason-Ignore'

2023-05-17 20:03:18 - [MESSAGE][PASSED] - Text 'Checking Ignore Status' is set on object 'Object Repository/Compliance status/setTextForReason-Ignore'

2023-05-17 20:03:18 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/btn_MarkasOverride-Ignore")): Object: 'Object Repository/Compliance status/btn_MarkasOverride-Ignore' is clicked on

2023-05-17 20:03:19 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/btn_MarkasOverride-Ignore' is clicked on

2023-05-17 20:03:19 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2023-05-17 20:03:21 - [MESSAGE][PASSED] - Delayed 2 second(s)

2023-05-17 20:03:21 - [TEST_STEP][PASSED] - scrollTop = driver.findElement(By.xpath("//a//span[text()='Non-Compliance']")): null

2023-05-17 20:03:21 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].scrollIntoView(false)", scrollTop): null

2023-05-17 20:03:21 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/scrollToNoncompliance(Top)")): Object: 'Object Repository/Compliance status/scrollToNoncompliance(Top)' is clicked on

2023-05-17 20:03:22 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/scrollToNoncompliance(Top)' is clicked on

2023-05-17 20:03:22 - [TEST_STEP][PASSED] - setText(findTestObject("Compliance status/input_SearchString"), findTestData("Add Inst-Type Data").getValue("Created-InsType_Name", 1)): Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Compliance status/input_SearchString'

2023-05-17 20:03:26 - [MESSAGE][PASSED] - Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Compliance status/input_SearchString'

2023-05-17 20:03:26 - [TEST_STEP][PASSED] - verifyEqual(Actual, expected): Actual object 'Test1.1 - 2023/17/05 19:57:56' and expected object 'Test1.1 - 2023/17/05 19:57:56' are equal

2023-05-17 20:03:26 - [MESSAGE][PASSED] - Actual object 'Test1.1 - 2023/17/05 19:57:56' and expected object 'Test1.1 - 2023/17/05 19:57:56' are equal

2023-05-17 20:03:26 - [TEST_STEP][PASSED] - setText(findTestObject("Compliance status/fromDate"), OverdueDate): Text '05/14/2023' is set on object 'Object Repository/Compliance status/fromDate'

2023-05-17 20:03:27 - [MESSAGE][PASSED] - Text '05/14/2023' is set on object 'Object Repository/Compliance status/fromDate'

2023-05-17 20:03:27 - [TEST_STEP][PASSED] - setText(findTestObject("Compliance status/toDate"), endDate): Text '05/17/2023' is set on object 'Object Repository/Compliance status/toDate'

2023-05-17 20:03:29 - [MESSAGE][PASSED] - Text '05/17/2023' is set on object 'Object Repository/Compliance status/toDate'

2023-05-17 20:03:29 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_submit")): Object: 'Object Repository/Compliance status/click_submit' is clicked on

2023-05-17 20:03:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_submit' is clicked on

2023-05-17 20:03:29 - [TEST_STEP][PASSED] - executeJavaScript("window.scrollBy(0,document.body.scrollHeight)", null): Execute JavaScript 'window.scrollBy(0,document.body.scrollHeight)' successfully

2023-05-17 20:03:29 - [MESSAGE][PASSED] - Execute JavaScript 'window.scrollBy(0,document.body.scrollHeight)' successfully

2023-05-17 20:03:29 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2023-05-17 20:03:31 - [MESSAGE][PASSED] - Delayed 2 second(s)

2023-05-17 20:03:31 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_Confirm")): Object: 'Object Repository/Compliance status/click_Confirm' is clicked on

2023-05-17 20:03:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_Confirm' is clicked on

2023-05-17 20:03:32 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:03:32 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334012621.png]]

2023-05-17 20:03:32 - [TEST_STEP][PASSED] - setText(findTestObject("Compliance status/setTextForReason-Confirm"), "Checking Confirm Status"): Text 'Checking Confirm Status' is set on object 'Object Repository/Compliance status/setTextForReason-Confirm'

2023-05-17 20:03:33 - [MESSAGE][PASSED] - Text 'Checking Confirm Status' is set on object 'Object Repository/Compliance status/setTextForReason-Confirm'

2023-05-17 20:03:33 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_btnConfirm")): Object: 'Object Repository/Compliance status/click_btnConfirm' is clicked on

2023-05-17 20:03:34 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_btnConfirm' is clicked on

2023-05-17 20:03:34 - [TEST_STEP][PASSED] - scrollToTask = driver.findElement(By.xpath("//a//span[text()='Tasks']")): null

2023-05-17 20:03:35 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].scrollIntoView(false)", scrollToTask): null

2023-05-17 20:03:35 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_Top-Task")): Object: 'Object Repository/Compliance status/click_Top-Task' is clicked on

2023-05-17 20:03:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_Top-Task' is clicked on

2023-05-17 20:03:36 - [TEST_STEP][PASSED] - setText(findTestObject("Compliance status/input_SearchString"), findTestData("Add Inst-Type Data").getValue("Created-InsType_Name", 1)): Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Compliance status/input_SearchString'

2023-05-17 20:03:45 - [MESSAGE][PASSED] - Text 'Test1.1 - 2023/17/05 19:57:56' is set on object 'Object Repository/Compliance status/input_SearchString'

2023-05-17 20:03:45 - [TEST_STEP][PASSED] - verifyEqual(Actual, expected): Actual object 'Test1.1 - 2023/17/05 19:57:56' and expected object 'Test1.1 - 2023/17/05 19:57:56' are equal

2023-05-17 20:03:45 - [MESSAGE][PASSED] - Actual object 'Test1.1 - 2023/17/05 19:57:56' and expected object 'Test1.1 - 2023/17/05 19:57:56' are equal

2023-05-17 20:03:45 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)

2023-05-17 20:03:47 - [MESSAGE][PASSED] - Delayed 2 second(s)

2023-05-17 20:03:47 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_Confirm")): Object: 'Object Repository/Compliance status/click_Confirm' is clicked on

2023-05-17 20:03:50 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_Confirm' is clicked on

2023-05-17 20:03:50 - [TEST_STEP][PASSED] - setText(findTestObject("Compliance status/setTextForReason-Confirm"), "Checking extra Confirm Status"): Text 'Checking extra Confirm Status' is set on object 'Object Repository/Compliance status/setTextForReason-Confirm'

2023-05-17 20:03:50 - [MESSAGE][PASSED] - Text 'Checking extra Confirm Status' is set on object 'Object Repository/Compliance status/setTextForReason-Confirm'

2023-05-17 20:03:50 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_btnConfirm")): Object: 'Object Repository/Compliance status/click_btnConfirm' is clicked on

2023-05-17 20:03:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_btnConfirm' is clicked on

2023-05-17 20:03:54 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Compliance status/scroll_viewInst"), 0): Scroll to object 'Object Repository/Compliance status/scroll_viewInst' successfully

2023-05-17 20:03:54 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:03:56 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Compliance status/scroll_viewInst' successfully

2023-05-17 20:03:56 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("Compliance status/scroll_shownCalender"), 0): Object 'Object Repository/Compliance status/scroll_shownCalender' is clickable

2023-05-17 20:03:57 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:03:57 - [MESSAGE][PASSED] - Object 'Object Repository/Compliance status/scroll_shownCalender' is clickable

2023-05-17 20:03:57 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/scroll_shownCalender")): Object: 'Object Repository/Compliance status/scroll_shownCalender' is clicked on

2023-05-17 20:03:57 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/scroll_shownCalender' is clicked on

2023-05-17 20:03:57 - [TEST_STEP][PASSED] - if (num == 1): null

2023-05-17 20:03:57 - [TEST_STEP][PASSED] - else if (num >= 17): null

2023-05-17 20:03:57 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_cal")): Object: 'Object Repository/Compliance status/click_cal' is clicked on

2023-05-17 20:03:58 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_cal' is clicked on

2023-05-17 20:03:58 - [TEST_STEP][PASSED] - LogTaskstatus.horizontalScroll(): null

2023-05-17 20:03:58 - [TEST_STEP][PASSED] - println("The current date is equal or above 17"): null

2023-05-17 20:03:58 - [TEST_STEP][PASSED] - NC = driver.findElements(By.xpath("//span[@class='glyphicon glyphicon-remove text-danger ng-star-inserted'] |//span[@class='glyphicon glyphicon-remove bg-dark ng-star-inserted']")): null

2023-05-17 20:03:58 - [TEST_STEP][PASSED] - for ([i = 0, i < NC.size(), (i++)]): null

2023-05-17 20:03:58 - [TEST_STEP][PASSED] - elemen = NC.get(i): null

2023-05-17 20:03:58 - [TEST_STEP][PASSED] - elemen.click(): null

2023-05-17 20:03:58 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:03:58 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:04:00 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334040152.png]]

2023-05-17 20:04:00 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_cancel")): Object: 'Object Repository/Compliance status/click_cancel' is clicked on

2023-05-17 20:04:00 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_cancel' is clicked on

2023-05-17 20:04:00 - [TEST_STEP][PASSED] - if (num <= 2 || num <= 1): null

2023-05-17 20:04:00 - [TEST_STEP][PASSED] - else if (num == 3): null

2023-05-17 20:04:00 - [TEST_STEP][PASSED] - else: Object: 'Object Repository/Compliance status/click_cancel' is clicked on

2023-05-17 20:04:00 - [TEST_STEP][PASSED] - missing = driver.findElements(By.xpath("//span[@class='glyphicon glyphicon-remove text-danger ng-star-inserted']|//span[@class='glyphicon glyphicon-remove bg-dark ng-star-inserted']")): null

2023-05-17 20:04:01 - [TEST_STEP][PASSED] - for ([i = 0, i < missing.size(), (i++)]): null

2023-05-17 20:04:01 - [TEST_STEP][PASSED] - eln = missing.get(i): null

2023-05-17 20:04:01 - [TEST_STEP][PASSED] - eln.click(): null

2023-05-17 20:04:01 - [TEST_STEP][PASSED] - break: null

2023-05-17 20:04:01 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:04:02 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334042030.png]]

2023-05-17 20:04:02 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/dateChanger")): Object: 'Object Repository/Compliance status/dateChanger' is clicked on

2023-05-17 20:04:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/dateChanger' is clicked on

2023-05-17 20:04:02 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:04:03 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334043592.png]]

2023-05-17 20:04:03 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/dateChanger")): Object: 'Object Repository/Compliance status/dateChanger' is clicked on

2023-05-17 20:04:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/dateChanger' is clicked on

2023-05-17 20:04:04 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:04:05 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334045469.png]]

2023-05-17 20:04:05 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_cancel")): Object: 'Object Repository/Compliance status/click_cancel' is clicked on

2023-05-17 20:04:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_cancel' is clicked on

2023-05-17 20:04:06 - [TEST_STEP][PASSED] - executeJavaScript("window.scrollBy(0,document.body.scrollHeight)", null): Execute JavaScript 'window.scrollBy(0,document.body.scrollHeight)' successfully

2023-05-17 20:04:06 - [MESSAGE][PASSED] - Execute JavaScript 'window.scrollBy(0,document.body.scrollHeight)' successfully

2023-05-17 20:04:06 - [TEST_STEP][PASSED] - click(findTestObject("Compliance status/click_HideCalender")): Object: 'Object Repository/Compliance status/click_HideCalender' is clicked on

2023-05-17 20:04:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Compliance status/click_HideCalender' is clicked on

2023-05-17 20:04:06 - [TEST_STEP][PASSED] - scrollToElement(findTestObject("Compliance status/scroll_shownCalender"), 0): Scroll to object 'Object Repository/Compliance status/scroll_shownCalender' successfully

2023-05-17 20:04:06 - [MESSAGE][WARNING] - Timeout '0' is invalid. Using default page load timeout: '30'

2023-05-17 20:04:10 - [MESSAGE][PASSED] - Scroll to object 'Object Repository/Compliance status/scroll_shownCalender' successfully

2023-05-17 20:04:10 - [TEST_STEP][PASSED] - scrollToOvrdue = driver.findElement(By.xpath("//strong[text()='Overdue']")): null

2023-05-17 20:04:10 - [TEST_STEP][PASSED] - js.executeScript("arguments[0].scrollIntoView(false)", scrollToOvrdue): null

2023-05-17 20:04:10 - [TEST_STEP][PASSED] - takeScreenshot(): Taking screenshot successfully

2023-05-17 20:04:11 - [MESSAGE][PASSED] - Taking screenshot successfully
[[ATTACHMENT|C:\\ELL\\Automation\\Reports\\20230517_195423\\Phase-1-Lot\\20230517_195423\\1684334051244.png]]]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2023-05-17 19:54:31 - [TEST_SUITE][PASSED] - Phase-1-Lot: Test Cases/Compliance status - Suite]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
